n<-length(y)
y=35,34,38,35,37
y=c(35,34,38,35,37)
n<-length(y)
estimate<-mean(y)
se<-sd(y)/sqrt(n)
se
int.50<-estimate+qt(c(.25,.75),n-1)*se
int.50
plot(y)
abline(y)
scatterplot(y)
library(car)
scatterplot(y)
abline(y)
int.95<-estimate+qnorm(.975)*se
in.95
int.95
estimate(700/300)
estimate<-(700/300)
se<-sqrt(estimate*(1-estiamte)/1000)
estimate<-(700/300)
estimate
se<-sqrt(estimate*(1-estiamte)/1000)
se<-sqrt(estimate*(1-estimate)/1000)
int.95<-estimate+qnorm(c(.025,.975))*se
y<-rep(c(0,1,2,3,4), c(600,300, 50,30,20))
mean(y)
n<-length(y)
n<-length(y)
estimate<-mean(y)
se<-sd(y)/sqrt(n)
int.95(estimate+qt(c(.025,.975))*se)
int.95<-(estimate+qt(c(.025,.975))*se)
int.95<-(estimate+qt(c(.025,.975),n-1)*se)
girl<-n(.4777, .4875, .4859, .4754, .4874, .4864, .4813, .4787, .4895, .4797, .4876, .4859, .4857, .4907, .5010, .4903, .4860, .4911, .4871, .4725, .4822, .4870, .4823, .4973)
girl<-c(.4777, .4875, .4859, .4754, .4874, .4864, .4813, .4787, .4895, .4797, .4876, .4859, .4857, .4907, .5010, .4903, .4860, .4911, .4871, .4725, .4822, .4870, .4823, .4973)
mean(c)
mean(girl)
sd(girl)
mean(theor)
theor<-c(.5,.5,.5)
mean(theor)
sd(theor)
sd(girl)
sd_exp<-sqrt((.486)(1-.486)/3903)
sqrt((.486)(1-.486)/3903)
sqrt((.486)(1-.486)/3903))
sqrt((.486)(1-.486)/3903)
mean(girl)
sd(girl)
sqrt((.485675)^2/(3903-1))
chisq.test(sd(girl),0.007775031)
meangirl<-mean(girl)
int.95 <- meangirl + qt(c(.025,.975),3903-1)
int.95
esde<-sqrt((.485675)^2/(3903-1))
esde
se<=esde(sqrt(3903))
sE<=esde(sqrt(3903))
esde/(sqrt(3903))
SE<-esde/(sqrt(3903))
int.95 <- meangirl + qt(c(.025,.975),3903-1)*SE
int.95
mean(girl)
meangirl<-mean(girl)
sd(girl)
sqrt((.486)(1-.486)/3903)
sqrt((.486)*(1-.486)/3903)
obs<-sd(girl) #observed sd
exp<-sqrt((.486)*(1-.486)/3903) ##should be expected sd based on observed mean if there was not variation butIsn't this the standard error formula not standard deviation?
chisq.test((obs)-(exp))^2/(exp))
se(obs)
se<-obs/sqrt(3903)
se
2*se
obs+(2*se)
obs-(2*se)
int.95 <- meangirl + qnorm(c(.025,.975))*exp
int.95
vector1<-c(0,50,mean=35, sd=10)
vector1
new<-rescale(vector1,mean=100, sd=15)
rescale(vector1,mean=100, sd=15)
help.search(rescaling)
help.search(rescale)
vector1<-c(0,50,mean=35, sd=10)
rescale(vector1,mean=100, sd=15)
runif(20,min=1, max=100)
h<-runif(20,min=1, max=100)
h
h
h
runif(20,min=1, max=100)
#(4)
runif(20,min=1, max=100)
sum(above)
sum(runif(20,min=1, max=100))
sum(runif(20,min=1, max=100))
for (sum(runif(20,min=1, max=100)))
for(i in 1-1000) {sum(runif(20,min=1, max=100))}
three<-for(i in 1-1000) {sum(runif(20,min=1, max=100))}
three#(4)
three<-for(i in 1-1000) {sum(runif(20,min=1, max=100))}
for(i in 1-1000) {sum(runif(20,min=1, max=100))}
h= sum(runif(20,min=1, max=100)
hfor(i in 1-1000) {sum(runif(20,min=1, max=100))}
h
h
#1) Atest is graded from 0to50,with an averagescore of 35and a standard deviation of 10.
s=c()
h= sum(runif(20,min=1, max=100)
for(i in 1-1000) {s[i]=h[i])}
for(i in 1-1000) {s[i]=h[i]}
s
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
library(plotrix)
library(gdata)
library(nlme)
library(scales)
library(arm)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gridExtra)
library(knitr)
library(xtable)
require(vegan)
data(sipoo)
View(sipoo)
out <- oecosimu(sipoo, decorana, "swap", burnin=100, thin=10, statistic="evals")
out
decorana
plot(as.ts(out))
lag.plot(as.ts(out))
acf(as.ts(out))
## Density plot: needs lattice
require(lattice)
densityplot(out, as.table = TRUE)
## Use quantitative null models to compare
## mean Bray-Curtis dissimilarities
data(dune)
meandist <- function(x) mean(vegdist(x, "bray"))
mbc1 <- oecosimu(dune, meandist, "r2dtable")
mbc1
## Define a custom function that shuffles
## cells in each rows
f <- function(x) {
apply(x, 2, function(z) sample(z, length(z)))
}
mbc2 <- oecosimu(as.matrix(dune), meandist, f)
mbc2
mbc2 <- oecosimu(as.matrix(dune), meandist, f)
data(dune)
meandist <- function(x) mean(vegdist(x, "bray"))
mbc1 <- oecosimu(dune, meandist, "r2dtable")
mbc1
## Define a custom function that shuffles
## cells in each rows
f <- function(x) {
apply(x, 2, function(z) sample(z, length(z)))
}
mbc2 <- oecosimu(as.matrix(dune), meandist, f)
mbc2
mbc2 <- oecosimu(as.matrix(dune),NULL, meandist, f)
mbc2 <- oecosimu(as.matrix(dune),arg= meandist, f)
data(sipoo)
rm(list=ls())
options(stringsAsFactors = FALSE)
require(vegan)
data(sipoo)
View(sipoo)
data <- cbind(c("A","B","C","A"), c("John", "Kendra", "Martin", "Steve"), c("12","12","13","14"))
colnames(data) <- c("Group", "Name", "Score")
data <- as.data.frame(data)
p <- ggplot(data, aes(x = Name, y = Score, fill = Name)) +
geom_point(pch = 19, aes(col = Group)) +
scale_colour_manual(values = c("black", "red", "green")) +
guides(fill = FALSE); p
library(ggplot2)
p <- ggplot(data, aes(x = Name, y = Score, fill = Name)) +
geom_point(pch = 19, aes(col = Group)) +
scale_colour_manual(values = c("black", "red", "green")) +
data = cbind(c("A","B","C","A"), c("John", "Kendra", "Martin", "Steve"), c("12","12","13","14"))
colnames(data) = c("Group", "Name", "Score")
data = as.data.frame(data)
p = ggplot(data, aes(x=Name, y=Score, fill=Name)) + geom_point(pch = 19, aes(col=Group)) + scale_colour_manual(values=c("black", "red", "green"))
print(p)
ggplot(iris) + geom_point(aes(x=Sepal.Width, y=Sepal.Length, color=Species, size=Sepal.Length))
ggplot(iris) + geom_point(aes(x=Sepal.Width, y=Sepal.Length, color=Species, size=Sepal.Length))
ggplot(iris) + geom_point(aes(x=Sepal.Width, y=Sepal.Length, color=Species, size=Sepal.Length)+scale_color_discrete(breaks="setosa"))
ggplot(iris) + geom_point(aes(x=Sepal.Width, y=Sepal.Length, color=Species, size=Sepal.Length))+scale_color_discrete(breaks="setosa"))
ggplot(iris) + geom_point(aes(x=Sepal.Width, y=Sepal.Length, color=Species, size=Sepal.Length))
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
24+18+12+6+0+
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
130*3
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
390*3
10*4*2
den<-12+8+4+2
reps<-den*3
treatments<-reps*2
surface<-24+18+12+6+0+
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
treaties<-surface*3 #=390
backup<-3*surface
treaties<-backup*3 #=390
surface<-24+18+12+6+0+
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
##130 seeds of each species * 3 treatments
backup<-3*surface
treaties<-backup*3 #=390
surface<-24+18+12+6+0+
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
##130 seeds of each species * 3 treatments
backup<-3*surface
treaties<-backup*3 #=1170
#GERMINATION TRIALS
#10 seeds per petri dish, 32? dishes per chamber * 8 species
# 4 replicates of 10
dish<-10
reps<-dish*4
germtreat<-reps*2
#80 seeds/species
### for testing pairwise
den<-12+8+4+2
reps<-den*3
treatments<-reps*2
##156
treaties+treatments+germtreat
warnings()
\begin{tabular*}{10 cm}{|l|l|}
1000/10/2
50\3
50/3
16*3*2*10
data6<-dplyr::select(data6,1:18)
data7<-dplyr::select(data7,1:14)
##### Columnames
colnames(data)<-(c("zero_day","tot_seed","Taxa","INC","COLD","plate_num","8/28/18","8/29/18",	"8/30/18",	"8/31/18",	"9/3/18",	"9/5/18",	"9/7/18",	"9/9/18",	"9/12/18",	"9/14/18",	"9/16/18",	"9/17/18","9/18/18","9/20/18","9/21/18"))
ncol(data)
data2$"9/10/18"<-0
ncol(data2)
colnames(data2)<-(c("zero_day","tot_seed","Taxa","INC","COLD","plate_num", "9/12/18",	"9/14/18",	"9/16/18",	"9/17/18","9/18/18","9/20/18","9/21/18","9/23/18","9/26/18","9/28/18","9/30/18","10/03/18","10/05/18","9/10/18"))
data3$"9/24/18"<-0
colnames(data3)<-(c("zero_day","tot_seed","Taxa","INC","COLD","plate_num","9/26/18","9/28/18","9/30/18","10/03/18","10/05/18","10/07/18","10/08/18","10/10/18","10/12/18","10/14/18","10/15/18","10/17/18","10/19/18","9/24/18"))
colnames(data4)<-(c("zero_day","tot_seed","Taxa","INC","COLD","plate_num","10/01/18","10/03/18","10/05/18","10/07/18","10/08/18","10/10/18","10/12/18","10/14/18","10/15/18","10/17/18","10/19/18","10/21/18","10/22/18","10/24/18","10/26/18"))
data5$"10/08/18"<-0
rm(list=ls())
options(stringsAsFactors = FALSE)
setwd("~/Documents/git/timetogerminate/germination_trials/")
library(tidyverse)
library("growthcurver")
library(lubridate)
library("Hmisc")
data<-read.csv("time_course_practice.csv", header=TRUE)
data2<-read.csv("time_course_practice2.csv", header=TRUE)
data3<-read.csv("time_course_practice3.csv", header=TRUE)
data4<-read.csv("time_course_practice4.csv", header=TRUE)
data5<-read.csv("time_course_practice5.csv", header=TRUE)
data6<-read.csv("time_course_practice6.csv",header=TRUE)
data7<-read.csv("time_course_practice7.csv", header=TRUE)
data<-dplyr::select(data,-c(X))
data3<-dplyr::select(data3,-c(X,X.1))
data5<-dplyr::select (data5,1:20)
data6<-dplyr::select(data6,1:18)
data7<-dplyr::select(data7,1:14)
##### Columnames
colnames(data)<-(c("zero_day","tot_seed","Taxa","INC","COLD","plate_num","8/28/18","8/29/18",	"8/30/18",	"8/31/18",	"9/3/18",	"9/5/18",	"9/7/18",	"9/9/18",	"9/12/18",	"9/14/18",	"9/16/18",	"9/17/18","9/18/18","9/20/18","9/21/18"))
ncol(data)
data2$"9/10/18"<-0
ncol(data2)
colnames(data2)<-(c("zero_day","tot_seed","Taxa","INC","COLD","plate_num", "9/12/18",	"9/14/18",	"9/16/18",	"9/17/18","9/18/18","9/20/18","9/21/18","9/23/18","9/26/18","9/28/18","9/30/18","10/03/18","10/05/18","9/10/18"))
data3$"9/24/18"<-0
colnames(data3)<-(c("zero_day","tot_seed","Taxa","INC","COLD","plate_num","9/26/18","9/28/18","9/30/18","10/03/18","10/05/18","10/07/18","10/08/18","10/10/18","10/12/18","10/14/18","10/15/18","10/17/18","10/19/18","9/24/18"))
colnames(data4)<-(c("zero_day","tot_seed","Taxa","INC","COLD","plate_num","10/01/18","10/03/18","10/05/18","10/07/18","10/08/18","10/10/18","10/12/18","10/14/18","10/15/18","10/17/18","10/19/18","10/21/18","10/22/18","10/24/18","10/26/18"))
data5$"10/08/18"<-0
colnames(data5)<-(c("zero_day","tot_seed","Taxa","INC","COLD","plate_num","10/10/18","10/12/18","10/14/18","10/15/18","10/17/18","10/19/18","10/21/18","10/22/18","10/24/18","10/26/18","10/28/18","10/29/18","10/31/18","11/2/18","10/08/18"))
colnames(data6)<-(c("zero_day","tot_seed","Taxa","INC","COLD","plate_num","10/15/18","10/17/18","10/19/18","10/21/18","10/22/18","10/24/18","10/26/18","10/28/18","10/29/18","10/31/18","11/2/18","11/4/18"))
colnames(data7)<-(c("zero_day","tot_seed","Taxa","INC","COLD","plate_num","10/22/18","10/24/18","10/26/18","10/28/18","10/29/18","10/31/18","11/2/18","11/4/18"))
##################
#########Reformat
data<-gather(data,"date","germination",7:21)
data$germination<-as.numeric(data$germination)
data2<-gather(data2,"date","germination",7:20)
data2$germination<-as.numeric(data2$germination)
data3<-gather(data3,"date","germination",7:20)
data3$germination<-as.numeric(data3$germination)
data4<-gather(data4,"date","germination",7:21)
data4$germination<-as.numeric(data4$germination)
data5<-gather(data5,"date","germination",7:21)
data5$germination<-as.numeric(data5$germination)
data6<-gather(data6,"date","germination",7:18)
data6$germination<-as.numeric(data6$germination)
data7<-gather(data7,"date","germination",7:14)
data7$germination<-as.numeric(data7$germination)
####Convert DATE to DOE###########
data$date<-as.Date(data$date,format =  "%m/%d/%y")
class(data$Date)
data$day<-yday(data$date)
unique(data$day)
start<-yday("2018/08/27")
data$DAY<-data$day-start
data2$date<-as.Date(data2$date,format =  "%m/%d/%y")
class(data2$date)
data2$day<-yday(data2$date)
unique(data2$day)
start2<-yday("2018/09/10")
data2$DAY<-data2$day-start2
data3$date<-as.Date(data3$date,format =  "%m/%d/%y")
class(data3$date)
data3$day<-yday(data3$date)
unique(data3$day)
start3<-yday("2018/09/24")
data3$DAY<-data3$day-start3
data4$date<-as.Date(data4$date,format =  "%m/%d/%y")
class(data4$date)
data4$day<-yday(data4$date)
unique(data4$day)
start4<-yday("2018/10/01")
data4$DAY<-data4$day-start4
data5$date<-as.Date(data5$date,format =  "%m/%d/%y")
class(data5$date)
data5$day<-yday(data5$date)
unique(data5$day)
start5<-yday("2018/10/08")
data5$DAY<-data5$day-start5
data6$date<-as.Date(data6$date,format =  "%m/%d/%y")
class(data6$date)
data6$day<-yday(data6$date)
unique(data6$day)
start6<-yday("2018/10/15")
data6$DAY<-data6$day-start6
data7$date<-as.Date(data7$date,format =  "%m/%d/%y")
class(data7$date)
data7$day<-yday(data7$date)
unique(data7$day)
start7<-yday("2018/10/22")
data7$DAY<-data7$day-start7
#######
###make it all numeric
data$germination<-ifelse(is.na(data$germination),0,data$germination)
data2$germination<-ifelse(is.na(data2$germination),0,data2$germination)
data3$germination<-ifelse(is.na(data3$germination),0,data3$germination)
data4$germination<-ifelse(is.na(data4$germination),0,data4$germination)
data5$germination<-ifelse(is.na(data5$germination),0,data5$germination)
data6$germination<-ifelse(is.na(data6$germination),0,data6$germination)
data7$germination<-ifelse(is.na(data7$germination),0,data7$germination)
#ggplot(data, aes(x = DAY, y = germination, color=INC)) + stat_summary(alpha=0.7)+facet_wrap(~Taxa)+theme_bw()+geom_line(stat = "summary", fun.y = mean)
#ggplot(data2, aes(x = DAY, y = germination, color=INC)) + stat_summary(alpha=0.7)+facet_wrap(~Taxa)+theme_bw()+geom_line(stat = "summary", fun.y = mean)
#ggplot(data3, aes(x = DAY, y = germination, color=INC)) + stat_summary(alpha=0.7)+facet_wrap(~Taxa)+theme_bw()+geom_line(stat = "summary", fun.y = mean)
full<-rbind(data,data2,data3,data4,data5,data6,data7)
full$INC<-ifelse(full$INC=="H", "High","Low")
table(full$COLD)
unique(full$Taxa)
ggplot(full, aes(x = DAY, y = germination, color=COLD, shape=INC)) + stat_summary(alpha=0.7)+facet_wrap(~Taxa)+theme_bw()+geom_line(stat = "summary", fun.y = mean)+scale_color_manual(values=c("orange", "dodgerblue", "purple","darkgreen", "red","deeppink","green"))
ggplot(full, aes(x = DAY, y = germination, color=COLD, shape=INC)) + stat_summary(alpha=0.7)+facet_wrap(~Taxa)+theme_bw()+geom_line(stat = "summary", fun.y = mean)+scale_color_manual(values=c("orange", "dodgerblue", "purple","darkgreen", "red","deeppink","green"))
