drought.index<-extract(DI.aug, matrix(c(DI.df$x,DI.df$y), ncol = 2))
DI.df$drought_index<-drought.index
###
plot(DI.aug)
points(DI.df$x,DI.df$y,pch=16,cex=0.6)
points(DI.df$x,DI.df$y,pch=16,cex=0.6)
###
plot(DI.sept)
###
plot(DI.sept)
###
plot(DI.aug)
points(DI.df$x,DI.df$y,pch=16,cex=)
points(DI.df$x,DI.df$y,pch=16)
p <- spTransform(d, CRS("+proj=tmerc +lat_0=49.306640625 +lon_0=2.9443359375 +k=1 +x_0=3509873.838067+y_0=5688162.279407 +ellps=krass +units=m +no_defs"))
gaas<-coordinates(p) ### p transforms site to weird german gauss projection
gaas.cord<-as.data.frame(gaas)
pep.cord<-as.data.frame(d)
colnames(gaas.cord)<-c("x","y")
class(d)
DI.df<-cbind(pep.cord,gaas.cord)
drought.index<-extract(DI.aug, matrix(c(DI.df$x,DI.df$y), ncol = 2))
DI.df$drought_index<-drought.index
p <- spTransform(d, CRS("+proj=tmerc +lat_0=49.306640625 +lon_0=2.9443359375 +k=1 +x_0=3059817.773789+y_0=5480963.711163 +ellps=krass +units=m +no_defs"))
gaas<-coordinates(p) ### p transforms site to weird german gauss projection
gaas<-coordinates(p) ### p transforms site to weird german gauss projection
gaas.cord<-as.data.frame(gaas)
pep.cord<-as.data.frame(d)
colnames(gaas.cord)<-c("x","y")
class(d)
DI.df<-cbind(pep.cord,gaas.cord)
drought.index<-extract(DI.aug, matrix(c(DI.df$x,DI.df$y), ncol = 2))
DI.df$drought_index<-drought.index
p <- spTransform(d, CRS("+proj=tmerc +lat_0=47.2700 +lon_0=7.5000 +k=1 +x_0=3386564.9400+y_0=5237917.9109 +ellps=krass +units=m +no_defs"))
gaas<-coordinates(p) ### p transforms site to weird german gauss projection
gaas.cord<-as.data.frame(gaas)
pep.cord<-as.data.frame(d)
colnames(gaas.cord)<-c("x","y")
class(d)
DI.df<-cbind(pep.cord,gaas.cord)
drought.index<-extract(DI.aug, matrix(c(DI.df$x,DI.df$y), ncol = 2))
DI.df$drought_index<-drought.index
coordinates(d)<- ~lon + lat ###PEP site coordinates
d<-rbind(aln,frax,cory,bet,quer,pru,aes) #make a datasheet of fraxinus and alnus
d<-filter(d,!is.na(offset))
DI.aug<-raster("grids_germany_multi_annual_drought_index_1981-2010_08.asc")
plot(DI.aug)
coordinates(d)<- ~lon + lat ###PEP site coordinates
proj4string(d) <- CRS("+proj=longlat +datum=WGS84")
proj4string(d
proj4string(d)
proj4string(d)
# THis should be the rihgt but doesnt project p <- spTransform(d, CRS("+proj=tmerc +lat_0=47.2700 +lon_0=7.5000 +k=1 +x_0=3386564.9400+y_0=5237917.9109 +ellps=krass +units=m +no_defs"))
p <- spTransform(d, CRS("+proj=tmerc +lat_0=50.625 +lon_0=9.84375, +k=1 +x_0=3559832.734474 +y_0=5610860.187573 +ellps=krass +units=m +no_defs"))
gaas<-coordinates(p) ### p transforms site to weird german gauss projection
gaas.cord<-as.data.frame(gaas)
pep.cord<-as.data.frame(d)
colnames(gaas.cord)<-c("x","y")
class(d)
DI.df<-cbind(pep.cord,gaas.cord)
drought.index<-extract(DI.aug, matrix(c(DI.df$x,DI.df$y), ncol = 2))
DI.df$drought_index<-drought.index
###
plot(DI.aug)
lmer(offset~DI+(1|taxa),data=Di.df)
lmer(offset~DI+(1|taxa),data=DI.df)
lmer(offset~drought_index+(1|taxa),data=DI.df)
DI.mod<-brm(offset~drought_index+(1|taxa),data=DI.df)
DI.df<-filter(DI.df,!is.na(drougt_index))
DI.df<-filter(DI.df,!is.na(drougt_index))
View(DI.df)
DI.df<-filter(DI.df,drought_index>0)
DI.df<-cbind(pep.cord,gaas.cord)
drought.index<-extract(DI.aug, matrix(c(DI.df$x,DI.df$y), ncol = 2))
drought.index
table(drought.index)
DI.df$drought_index<-drought.index
DI.df<-filter(DI.df,!is.na(drought_index))
DI.mod<-brm(offset~drought_index,data=DI.df)
d<-rbind(aln,frax,cory,bet,quer) #make a datasheet of fraxinus and alnus
d<-filter(d,!is.na(offset))
DI.aug<-raster("grids_germany_multi_annual_drought_index_1981-2010_08.asc")
plot(DI.aug)
coordinates(d)<- ~lon + lat ###PEP site coordinates
proj4string(d) <- CRS("+proj=longlat +datum=WGS84")
# THis should be the rihgt but doesnt project p <- spTransform(d, CRS("+proj=tmerc +lat_0=47.2700 +lon_0=7.5000 +k=1 +x_0=3386564.9400+y_0=5237917.9109 +ellps=krass +units=m +no_defs"))
p <- spTransform(d, CRS("+proj=tmerc +lat_0=50.625 +lon_0=9.84375, +k=1 +x_0=3559832.734474 +y_0=5610860.187573 +ellps=krass +units=m +no_defs"))
gaas<-coordinates(p) ### p transforms site to weird german gauss projection
gaas.cord<-as.data.frame(gaas)
pep.cord<-as.data.frame(d)
colnames(gaas.cord)<-c("x","y")
class(d)
DI.df<-cbind(pep.cord,gaas.cord)
drought.index<-extract(DI.aug, matrix(c(DI.df$x,DI.df$y), ncol = 2))
table(drought.index)
DI.df$drought_index<-drought.index
###
plot(DI.aug)
points(DI.df$x,DI.df$y,pch=16)
DI.df<-filter(DI.df,!is.na(drought_index))
DI.mod<-brm(offset~drought_index,data=DI.df)
DI.mod<-lm(offset~drought_index,data=DI.df)
summary(DI.mod)
DI.mod<-lmer(offset~drought_index+(1|taxa),data=DI.df)
DI.mod<-lmer(offset~drought_index+(1|taxa),data=DI.df)
summary(DI.mod)
coef(DI.mod)
DI.mod<-lmer(offset~drought_index+(drought_index|taxa),data=DI.df)
DI.mod<-lmer(offset~drought_index+(1|taxa),data=DI.df)
summary(DI.mod)
coef(DI.mod)
moist<-raster("grids_germany_multi_annual_soil_moist_1991-2010_08.asc") ##Gause Kruger 3 for August
moist2<-raster("grids_germany_multi_annual_soil_moist_1991-2010_04.asc")
plot(moist)
coordinates(d)<- ~lon + lat ###PEP site coordinates
proj4string(d) <- CRS("+proj=longlat +datum=WGS84")
# THis should be the rihgt but doesnt project p <- spTransform(d, CRS("+proj=tmerc +lat_0=47.2700 +lon_0=7.5000 +k=1 +x_0=3386564.9400+y_0=5237917.9109 +ellps=krass +units=m +no_defs"))
p <- spTransform(d, CRS("+proj=tmerc +lat_0=50.625 +lon_0=9.84375, +k=1 +x_0=3559832.734474 +y_0=5610860.187573 +ellps=krass +units=m +no_defs"))
gaas<-coordinates(p) ### p transforms site to weird german gauss projection
gaas.cord<-as.data.frame(gaas)
pep.cord<-as.data.frame(d)
colnames(gaas.cord)<-c("x","y")
class(d)
DI.df<-cbind(pep.cord,gaas.cord)
df<-cbind(pep.cord,gaas.cord)
View(df)
###decent projectiontry to extract
Soil<-extract(moist, matrix(c(goot$x,goot$y), ncol = 2))
df$SM<-Soil
###decent projectiontry to extract
Soil<-extract(moist, matrix(c(df$x,df$y), ncol = 2))
df$SM<-Soil
drought.index<-extract(DI.aug, matrix(c(DI.df$x,DI.df$y), ncol = 2))
drought.index<-extract(DI.aug, matrix(c(DI.df$x,DI.df$y), ncol = 2))
df$drought_index<-drought.index
###
plot(moist)
points(df$x,DI.df$y,pch=16)
DI.mod<-lmer(offset~SM+(1|taxa),data=DI.df)
DI.mod<-lmer(offset~sm+(1|taxa),data=df)
DI.mod<-lmer(offset~SM+(1|taxa),data=df)
summary(DI.mod)
coef(DI.mod)
DI.mod<-lmer(offset~SM+(SM|taxa),data=df)
summary(DI.mod)
DI.mod<-lmer(offset~SM+flower+(1|taxa),data=df)
summary(DI.mod)
coef(DI.mod)
DI.mod<-lmer(offset~SM+(1|taxa),data=df)
summary(DI.mod)
coef(DI.mod)
DI.mod<-lmer(offset~SM:flower+(1|taxa),data=df) ###sign flip when you add flowering
summary(DI.mod)
DI.mod<-lmer(offset~SM*flower+(1|taxa),data=df) ###sign flip when you add flowering
summary(DI.mod)
DI.mod<-lmer(offset~SM+drought_index+(1|taxa),data=df) ###sign flip when you add flowering
summary(DI.mod)
coef(DI.mod)
DI.mod<-lmer(offset~SM+(1|taxa),data=df) ###sign flip when you add flowering
summary(DI.mod)
DI.mod<-brm(offset~SM+(1|taxa),data=df) ###sign flip when you add flowering
DI.mod<-lmer(offset~SM+(1|taxa),data=df) ###sign flip when you add flowering
summary(DI.mod)
coef(DI.mod)
summary(DI.mod)
DI.mod$r.squared
DI.mod$r.squared
AIC(DI.mod)
FLO.MOD<-lmer(offset~flower+(1|taxa),data=df)
AIC(FLO.MOD)
AIC(DI.mod)
summary(FLO.MOD)
coef(FLO.MOD)
flo.sm<-lmer(offset~flower+SM+(1|taxa,data=df)
summary(flo.sm)
flo.sm<-lmer(offset~flower+SM+(1|taxa,data=df))
summary(flo.sm)
rm(list=ls())
options(stringsAsFactors = FALSE)
setwd("~/Documents/git/timetogerminate/germination_trials/input")
library("brms")
library(tidyverse)
library(lme4)
library(broom)
library(ggstance)
library(RColorBrewer)
load("GImodels")
GIwet<-filter(GIforplot,Taxa %in% c("Cryptotaenia canadensis","Hesperis matronalis","Polygonum virginiatum","Eurbia diviricata","Anemone virginana"))
ggplot(GIwet,aes(reorder(Taxa,-mean),mean))+geom_bar(stat = "identity",position="dodge",aes(fill=Taxa))+geom_errorbar(aes(x=Taxa, ymin=mean-sd, ymax=mean+sd),width=0.4)+facet_grid(INC~COLD)+theme(axis.text.x = element_blank())
ggplot(GIdry,aes(reorder(Taxa,-mean),mean))+geom_bar(stat = "identity",position="dodge",aes(fill=Taxa))+geom_bar(stat = "identity",position="dodge",aes(fill=Taxa))+geom_errorbar(aes(x=Taxa, ymin=mean-sd, ymax=mean+sd),width=0.4)+facet_grid(INC~COLD)+theme(axis.text.x = element_blank())
rlnorm(10, meanlog = 5, sdlog = 1)
plnorm(5, meanlog = 3, sdlog = 1, lower.tail = TRUE, log.p = FALSE)
dlnorm(20, meanlog = 5, sdlog = 1, log = FALSE)
rlnorm(20, meanlog = 5, sdlog = 1, log = FALSE)
rlnorm(20, meanlog = 5, sdlog = 1)
rlnorm(20, meanlog = 0, sdlog = 1)
plot(rlnorm(20, meanlog = 0, sdlog = 1))
germday<-rtnorm(ntot,40,10,lower=10,upper=70)
germday
germday<-rnorm(ntot,40,10,lower=10,upper=70)
germday<-rnorm(nday,40,10,lower=10,upper=70)
germday<-rtnorm(nday,40,10,lower=10,upper=70)
germday
###fake data for germination mdodels
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
germperday<-rnorm(10,4,1)
?rnorm()
rnorm(10, mean =2, sd = 1)
norm(nday,5,1)
rnorm(nday,5,1)
germperday
plot(germperday)
germperday<-round(rnorm(10,4,1))
round(rnorm(10,4,1))
round(rlnorm(nday, meanlog = 0, sdlog = 1))
round(rlnorm(nday, meanlog = 0, sdlog = 1))
nday<-10  # number of observations days
round(rlnorm(nday, meanlog = 0, sdlog = 1))
penis<-round(rchisq(30,2))
p_cens<-rep(1,30)
p_type<-rep("penis",30)
p_bind<-cbind(penis,p_cens,p_type)
View(p_bind)
###fake data for germination mdodels
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
nday<-10  # number of observations days
round(rnorm(10,4,1))
round(rlnorm(nday, meanlog = 0, sdlog = 1))
set.seed(133)
nday<-10  # number of observations days
round(rnorm(10,4,1))
round(rlnorm(nday, meanlog = 0, sdlog = 1))
round(rlnorm(nday, meanlog = 0, sdlog = 1))
time<-round(rnorm(nseed,5,2))
nseed<-20
time<-round(rnorm(nseed,5,2))
time
time<-round(rnorm(nseed,10,4))
time
time
nobs<-20
time<-round(rnorm(nobs,1,.75))
time
time<-round(rnorm(nobs,20,.25))
time
round(rbinom(nobs,20,.25)))
rbinom(nobs,20,.25))
nobs<-20
rbinom(nobs,20,.25))
rbinom(nobs,1,.25))
rbinom(20,1,.25))
rbinom(20,1,.25)
rbinom(20,20,.25)
rbinom(20,1,.25)
rbinom(20,1,.1)
rbinom(20,1,.05)
rbinom(20,1,.005)
rbinom(20,1,.001)
germ<-rnorm(nobs,3,2)
germ
germ<-round(rnorm(nobs,3,2))
germ
germ<-round(rnorm(nobs,4,3))
germ
germ<-round(rnorm(nobs,4,1))
germ
> plot(cumsum(germ))
plot(cumsum(germ))
intercept<-rbinom(20,1,.25)
rbinom(20,1,.25)
rbinom(20,3,.25)
rbinom(20,5,.25)
or<-rbinom(20,5,.25)
plot(cumsum(or))
or<-rbinom(20,5,.5)
plot(cumsum(or))
or<-rbinom(20,5,.7)
plot(cumsum(or))
or<-rbinom(20,5,.4)
plot(cumsum(or))
or<-rbinom(20,10,.4)
plot(cumsum(or))
rlnorm(20, meanlog = 0, sdlog = 1)
round(rlnorm(20, meanlog = 0, sdlog = 1))
or<-round(rlnorm(20, meanlog = 0, sdlog = 1))
plot(cumsum(or))
or<-round(rlnorm(20, meanlog = 0, sdlog = 1,lower.tail=TRUE))
plot(cumsum(or))
plot(or)
or
or
or<-round(rlnorm(nobs, meanlog = 0, sdlog = 1,lower.tail=TRUE))
histogram(or)
hist(or)
hist(or,binwidth=1)
hist(or,breaks=1)
hist(or,breaks=20)
plot(cumsum(or))
plot(cumsum(or))
or<-round(rlnorm(nobs, meanlog = 0, sdlog = 1,lower.tail=TRUE,upper.tail=TRUE))
or
round(rlnorm(nobs, meanlog = 0, sdlog = 1,lower.tail=TRUE))
round(rlnorm(nobs, meanlog = 0, sdlog = 1,lower.tail=TRUE))
round(rlnorm(nobs, meanlog = 0, sdlog = 1,lower.tail=TRUE)
plot(cumsum(or))
hist(or,breaks=20)
rbeta(20)
###fake data for germination mdodels
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
set.seed(133)
nobs<-20
germ<-round(rnorm(nobs,4,1))
plot(cumsum(or))
round(rlnorm(nobs, meanlog = 0, sdlog = 1,lower.tail=TRUE))
time<-rnorm(nseed,10,2)
rnorm(nseed,10,2)
nseed<-10
time<-rnorm(nseed,10,2)
rnorm(nseed,10,2)
time<-round(rnorm(nseed,10,2))
round(rnorm(nseed,10,2))
install.packages("zrmacc")
library(devtools)
install_github("zrmacc/Temporal")
library(Temporal)
D = rLogLogistic(n=20,a=4,l=1,p=0.2);
View(D)
rLogLogistic(n=20,a=4,l=10,p=0.2);
rLogLogistic(n=20,a=4,l=100,p=0.2);
rLogLogistic(n=20,a=10,l=100,p=0.2);
?rLogLogistic()
rLogLogistic(n=20,a=4,l=2,p=0.2);
rlnorm(20,0,1)
round(rlnorm(20,0,1))
round(rlnorm(20,2,1))
round(rlnorm(20,0,3))
round(rlnorm(20,0,.5))
round(rlnorm(20,0,),lower.tail=TRUE)
round(rlnorm(20,0,1),lower.tail=TRUE)
round(rlnorm(20,0,1,lower.tail=TRUE))
rlnorm(20,0,1,lower.tail=TRUE)
###fake data for germination mdodels
rm(list=ls())
options(stringsAsFactors = FALSE)
rlnorm(20,0,1)
rlnorm(20,0,1,lower.tail=TRUE)
rlnorm(20,0,1,lower.tail=TRUE,log.p=FALSE)
rlnorm(20,0,1)
rlnorm((20,0,1),lower.tail=TRUE)
rlnorm(20,0,1)
round(rlnorm(20,0,1))
dlnorm(1)
round(rlnorm(20,0,1))
round(rlnorm(20,0,1))
round(rlnorm(20,0,1))
round(rlnorm(20,0,.8))
round(rlnorm(20,0,.8))
round(rlnorm(20,0,.7))
round(rlnorm(20,1,2))
round(rlnorm(20,1,1))
round(rlnorm(20,0,1))
round(rlnorm(20,0,.5))
round(rlnorm(20,0,.8))
a<-round(rlnorm(20,0,.8))
cumsum(a)
plot(cumsum(a))
a<-round(rlnorm(20,0,1))
plot(cumsum(a))
a<-round(rlnorm(20,0,1.5))
plot(cumsum(a))
a
a<-round(rlnorm(20,0,1.2))
plot(cumsum(a))
a
cumsum(a)
a<-round(rlnorm(20,0,.9))
plot(cumsum(a))
a<-round(rlnorm(20,0,.9,lower.tail=TRUE))
plot(cumsum(a))
round(rlnorm(20,0,.9,lower.tail=TRUE))
round(dlnorm(20,0,.9,lower.tail=TRUE))
dlnorm(20,0,.9,lower.tail=TRUE)
rlnorm(2-, meanlog = 0, sdlog = 1, lower.tail = TRUE, log.p = FALSE)
rlnorm(20, meanlog = 0, sdlog = 1, lower.tail = TRUE, log.p = FALSE)
rlnorm(20, meanlog = 0, sdlog = 1)
round(rlnorm(20, meanlog = 0, sdlog = 1))
plot(cumsum(round(rlnorm(20, meanlog = 0, sdlog = 1))))
a<-round(rlnorm(20, meanlog = 0, sdlog = 1))
b<-cumsum(a)
time<-0:20
###fake data for germination mdodels
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
##use lognoral to simulate the data
set.seed(613)
time<-0:20
germ<-round(rlnorm(20, meanlog = 0, sdlog = 1))
cum.germ<-cumsum(germ)
time<-0:21
germ<-round(rlnorm(20, meanlog = 0, sdlog = 1))
cum.germ<-cumsum(germ)
data.frame(time,cum.germ)
goo<-data.frame(time,cum.germ)
goo<-data.frame[time,cum.germ]
goo<-data.frame(time,cum.germ)
###fake data for germination mdodels
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
time<-0:20
germ<-round(rlnorm(20, meanlog = 0, sdlog = 1))
goo<-data.frame(time,germ)
goo<-as.data.frame(time,germ)
View(goo)
goo<-data.frame(time,germ)
View(goo)
goo<-data.frame(c(time,germ))
###fake data for germination mdodels
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
##use lognoral to simulate the data
set.seed(613)
time<-0:20
germ<-round(rlnorm(20, meanlog = 0, sdlog = 1))
cum.germ<-cumsum(germ)
goo<-data.frame(c(time,germ))
goo<-data.frame(rbind(time,germ))
View(goo)
goo<-data.frame(cbind(time,germ))
View(goo)
##use lognoral to simulate the data
set.seed(613613)
time<-0:20
germ<-round(rlnorm(20, meanlog = 0, sdlog = 1))
cum.germ<-cumsum(germ)
goo<-data.frame(cbind(time,germ))
View(goo)
goo<-data.frame(cbind(time,germ,cum.germ))
View(goo)
###fake data for germination mdodels
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
##use lognoral to simulate the data
set.seed(613613)
time<-0:20
time<- seq(0, 20, by=2)
germ<-round(rlnorm(11, meanlog = 0, sdlog = 1))
cum.germ<-cumsum(germ)
goo<-data.frame(cbind(time,germ,cum.germ))
View(goo)
time<- seq(0, 25, by=2)
View(goo)
###fake data for germination mdodels
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
##use lognoral to simulate the data
set.seed(613613)
time<- seq(0, 25, by=2)
time
time<- seq(0,2, length.out = 11)
time
time<- seq(2,length.out = 11)
seq(2,length.out = 11)
time<- seq(0, 25, by=3)
germ<-round(rlnorm(9, meanlog = 0, sdlog = 1))
cum.germ<-cumsum(germ)
goo<-data.frame(cbind(time,germ,cum.germ))
goo
set.seed(10)
round(rlnorm(9, meanlog = 0, sdlog = 1))
##use lognoral to simulate the data
set.seed(613613)
germ<-round(rlnorm(9, meanlog = 0, sdlog = 1))
germ
goo$unit<-"A"
View(goo)
drm(cum.germ~day)
library(drc)
###fake data for germination mdodels
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
library(drc)
drm(germ~time,data=goo,fct = LL.3(), type ="event")
##use lognoral to simulate the data
set.seed(613613)
##use lognoral to simulate the data
set.seed(613613)
time<- seq(0, 25, by=3)
germ<-round(rlnorm(9, meanlog = 0, sdlog = 1))
cum.germ<-cumsum(germ)
goo<-data.frame(cbind(time,germ,cum.germ))
goo$unit<-"A"
drm(germ~time,data=goo,fct = LL.3(), type ="event")
mod<-drm(germ~time,data=goo,fct = LL.3(), type ="event")
summary(mod)
###fake data for germination mdodels
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
library(drc)
library(tidyverse)
