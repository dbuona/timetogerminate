# #write out the results for this run
source(here("R","sourcefiles","PriEff_Output.R"))
}
sapply(g_cumulative, tail, 1)
#define the run - Consider creating a dataframe with combinations of parms to test
nruns<-1
outputy<-data.frame()
#outputy2<-data.frame()
#outputy3<-data.frame()
for (j in c(1:nruns)) {
nyrs <- 300
#define the environment for this run
source(here("R","sourcefiles","PriEff_Envt.R"))
#define the species in this run
source(here("R","sourcefiles","PriEff_Species.R"))
#run the model for nyrs
source(here("R","sourcefiles","PriEff_Comp.R"))
source(here("R","sourcefiles","PriEff_Model.R"))
# #write out the results for this run
source(here("R","sourcefiles","PriEff_Output.R"))
}
sapply(g_cumulative, tail, 1)
xi.mu <- log(5)                       # mean of chilling distribution ##
xi.sigma <- 1                    # sd of chilling distribution
xi <- rlnorm(nyrs, xi.mu, xi.sigma)
xi
#define the run - Consider creating a dataframe with combinations of parms to test
nruns<-1
outputy<-data.frame()
#outputy2<-data.frame()
#outputy3<-data.frame()
for (j in c(1:nruns)) {
nyrs <- 300
#define the environment for this run
source(here("R","sourcefiles","PriEff_Envt.R"))
#define the species in this run
source(here("R","sourcefiles","PriEff_Species.R"))
#run the model for nyrs
source(here("R","sourcefiles","PriEff_Comp.R"))
source(here("R","sourcefiles","PriEff_Model.R"))
# #write out the results for this run
source(here("R","sourcefiles","PriEff_Output.R"))
}
sapply(g_cumulative, tail, 1)
xi.mu <- log(1)                       # mean of chilling distribution ##
xi.mu
xi.sigma <- 1                    # sd of chilling distribution
xi <- rlnorm(nyrs, xi.mu, xi.sigma)
xi
dev.off()
#define the run - Consider creating a dataframe with combinations of parms to test
nruns<-1
outputy<-data.frame()
#outputy2<-data.frame()
#outputy3<-data.frame()
for (j in c(1:nruns)) {
nyrs <- 300
#define the environment for this run
source(here("R","sourcefiles","PriEff_Envt.R"))
#define the species in this run
source(here("R","sourcefiles","PriEff_Species.R"))
#run the model for nyrs
source(here("R","sourcefiles","PriEff_Comp.R"))
source(here("R","sourcefiles","PriEff_Model.R"))
# #write out the results for this run
source(here("R","sourcefiles","PriEff_Output.R"))
}
sapply(g_cumulative, tail, 1)
#Test Plot for cumulative germination
# if(FALSE){
if (yr==1) {
plot(seq(0,days,1),rep(0,days+1),type="n",
ylim=c(0,1.1),,xlim= c(0,80),
xlab="days",ylab="cumulative germination by d",
main="Cumulative Germination by sp, yrs",
xaxs="i",yaxs="i")
}
plot(seq(0,days,1),rep(0,days+1),type="n",
ylim=c(0,1.1),,xlim= c(0,80),
xlab="days",ylab="cumulative germination by d",
main="Cumulative Germination by sp, yrs",
xaxs="i",yaxs="i")
#Test Plot for cumulative germination
# if(FALSE){
if (yr==1) {
plot(seq(0,days,1),rep(0,days+1),type="n",
ylim=c(0,1.1),,xlim= c(0,80),
xlab="days",ylab="cumulative germination by d",
main="Cumulative Germination by sp, yrs",
xaxs="i",yaxs="i")
}
lines(seq(0,days,1),gc1,type="l",col=1)
lines(seq(0,days,1), gc2,type="l",col=2)
#Test Plot for cumulative germination
# if(FALSE){
if (yr==1) {
plot(seq(0,days,1),rep(0,days+1),type="n",
ylim=c(0,1.1),,xlim= c(0,80),
xlab="days",ylab="cumulative germination by d",
main="Cumulative Germination by sp, yrs",
xaxs="i",yaxs="i")
}
lines(seq(0,days,1),gc1,type="l",col=1)
lines(seq(0,days,1), gc2,type="l",col=2)
for (yr in c(1:nyrs)){
g1_byday <- data.frame(x=seq(0,days,by=dt),y = rep(0,days+1))
g2_byday <- data.frame(x=seq(0,days,by=dt),y = rep(0,days+1))
gc1 = rep(0,days+1)
gc2 = rep(0,days+1) #cumulative germination on day d
##Version with all germination on one day (tau_g50)
# ts1[ts1$x==tau_g50[yr,1],2] = gmax[1]
# ts2[ts2$x==tau_g50[yr,2],2] = gmax[2]
#Germination follows a Hill function (Dose-Response) with min = 0
for (d in seq(1,days+1,by=1)){
gc1[d]  <- ifelse(d==1,0,gmin[1] + (gmax[yr,1]-gmin[1]) * (d^nH / (tau_g50[yr,1]^nH + d^nH)))
gc2[d]  <- ifelse(d==1,0,gmin[2] + (gmax[yr,2]-gmin[2]) * (d^nH / (tau_g50[yr,2]^nH + d^nH)))
g1_byday$y[d] <- ifelse(d==1, 0, gc1[d] - gc1[d-1])
g2_byday$y[d] <- ifelse(d==1, 0, gc2[d] - gc2[d-1])
}
maxdailygerm<- max(maxdailygerm,max(g1_byday$y),max(g2_byday$y))
g_daily[[yr]] <- list(data.frame(g1_byday),data.frame(g2_byday))
g_cumulative[[yr]] <- data.frame(gc1,gc2)
#Test Plot for cumulative germination
# if(FALSE){
if (yr==1) {
plot(seq(0,days,1),rep(0,days+1),type="n",
ylim=c(0,1.1),,xlim= c(0,80),
xlab="days",ylab="cumulative germination by d",
main="Cumulative Germination by sp, yrs",
xaxs="i",yaxs="i")
}
lines(seq(0,days,1),gc1,type="l",col=1)
lines(seq(0,days,1), gc2,type="l",col=2)
}
#Priority Effects - main code
rm(list=ls())
#libraries and working directories, oh my!
library(deSolve)
library(scales)
library(dplyr)
require(MultiRNG)
library(ggpubr)
if(length(grep("lizzie", getwd())>0)) {
setwd("~/Documents/git/projects/temporalvar/R")
}
if(length(grep("danielbuonaiuto", getwd())>0)) {
setwd("~/Documents/git/temporalvar/")
}
library(here)
here()
dev.off()
#define the run - Consider creating a dataframe with combinations of parms to test
nruns<-10
outputy<-data.frame()
#outputy2<-data.frame()
#outputy3<-data.frame()
for (j in c(1:nruns)) {
nyrs <- 300
#define the environment for this run
source(here("R","sourcefiles","PriEff_Envt.R"))
#define the species in this run
source(here("R","sourcefiles","PriEff_Species.R"))
#run the model for nyrs
source(here("R","sourcefiles","PriEff_Comp.R"))
source(here("R","sourcefiles","PriEff_Model.R"))
# #write out the results for this run
source(here("R","sourcefiles","PriEff_Output.R"))
}
xi.mu <- log(1)                       # mean of chilling distribution ##
xi.sigma <- .1                    # sd of chilling distribution
xi
xi.mu <- log(1)                       # mean of chilling distribution ##
xi.sigma <- .01                    # sd of chilling distribution
xi <- rlnorm(nyrs, xi.mu, xi.sigma)
xi
dev.off()
#define the run - Consider creating a dataframe with combinations of parms to test
nruns<-10
outputy<-data.frame()
#outputy2<-data.frame()
#outputy3<-data.frame()
for (j in c(1:nruns)) {
nyrs <- 300
#define the environment for this run
source(here("R","sourcefiles","PriEff_Envt.R"))
#define the species in this run
source(here("R","sourcefiles","PriEff_Species.R"))
#run the model for nyrs
source(here("R","sourcefiles","PriEff_Comp.R"))
source(here("R","sourcefiles","PriEff_Model.R"))
# #write out the results for this run
source(here("R","sourcefiles","PriEff_Output.R"))
}
xi.mu <- log(1.1)                       # mean of chilling distribution ##
xi.sigma <- .01                    # sd of chilling distribution
xi <- rlnorm(nyrs, xi.mu, xi.sigma)
xi
xi.mu <- log(1)                       # mean of chilling distribution ##
xi.sigma <- .1                   # sd of chilling distribution
xi <- rlnorm(nyrs, xi.mu, xi.sigma)
xi
#define the run - Consider creating a dataframe with combinations of parms to test
nruns<-10
outputy<-data.frame()
#outputy2<-data.frame()
#outputy3<-data.frame()
for (j in c(1:nruns)) {
nyrs <- 300
#define the environment for this run
source(here("R","sourcefiles","PriEff_Envt.R"))
#define the species in this run
source(here("R","sourcefiles","PriEff_Species.R"))
#run the model for nyrs
source(here("R","sourcefiles","PriEff_Comp.R"))
source(here("R","sourcefiles","PriEff_Model.R"))
# #write out the results for this run
source(here("R","sourcefiles","PriEff_Output.R"))
}
sapply(g_cumulative, tail, 1)
#Priority Effects - main code
rm(list=ls())
#libraries and working directories, oh my!
library(deSolve)
library(scales)
library(dplyr)
require(MultiRNG)
library(ggpubr)
if(length(grep("lizzie", getwd())>0)) {
setwd("~/Documents/git/projects/temporalvar/R")
}
if(length(grep("danielbuonaiuto", getwd())>0)) {
setwd("~/Documents/git/temporalvar/")
}
library(here)
here()
dev.off()
#define the run - Consider creating a dataframe with combinations of parms to test
nruns<-10
outputy<-data.frame()
#outputy2<-data.frame()
#outputy3<-data.frame()
for (j in c(1:nruns)) {
nyrs <- 300
#define the environment for this run
source(here("R","sourcefiles","PriEff_Envt.R"))
#define the species in this run
source(here("R","sourcefiles","PriEff_Species.R"))
#run the model for nyrs
source(here("R","sourcefiles","PriEff_Comp.R"))
source(here("R","sourcefiles","PriEff_Model.R"))
# #write out the results for this run
source(here("R","sourcefiles","PriEff_Output.R"))
}
sapply(g_cumulative, tail, 1) ## Dan think this should be the realized germinaiton fraction
dev.off()
#define the run - Consider creating a dataframe with combinations of parms to test
nruns<-10
outputy<-data.frame()
#outputy2<-data.frame()
#outputy3<-data.frame()
for (j in c(1:nruns)) {
nyrs <- 300
#define the environment for this run
source(here("R","sourcefiles","PriEff_Envt.R"))
#define the species in this run
source(here("R","sourcefiles","PriEff_Species.R"))
#run the model for nyrs
source(here("R","sourcefiles","PriEff_Comp.R"))
source(here("R","sourcefiles","PriEff_Model.R"))
# #write out the results for this run
source(here("R","sourcefiles","PriEff_Output.R"))
}
xi.mu <- log(10)                       # mean of chilling distribution ##
xi.sigma <- .4                      # sd of chilling distribution
xi <- rlnorm(nyrs, xi.mu, xi.sigma)
xi
xi.sigma <- .2                      # sd of chilling distribution
#Priority Effects - main code
rm(list=ls())
#libraries and working directories, oh my!
library(deSolve)
library(scales)
library(dplyr)
require(MultiRNG)
library(ggpubr)
if(length(grep("lizzie", getwd())>0)) {
setwd("~/Documents/git/projects/temporalvar/R")
}
if(length(grep("danielbuonaiuto", getwd())>0)) {
setwd("~/Documents/git/temporalvar/")
}
library(here)
here()
dev.off()
#define the run - Consider creating a dataframe with combinations of parms to test
nruns<-1
outputy<-data.frame()
#outputy2<-data.frame()
#outputy3<-data.frame()
for (j in c(1:nruns)) {
nyrs <- 300
#define the environment for this run
source(here("R","sourcefiles","PriEff_Envt.R"))
#define the species in this run
source(here("R","sourcefiles","PriEff_Species.R"))
#run the model for nyrs
source(here("R","sourcefiles","PriEff_Comp.R"))
source(here("R","sourcefiles","PriEff_Model.R"))
# #write out the results for this run
source(here("R","sourcefiles","PriEff_Output.R"))
}
dev.off()
#define the run - Consider creating a dataframe with combinations of parms to test
nruns<-1
outputy<-data.frame()
#outputy2<-data.frame()
#outputy3<-data.frame()
for (j in c(1:nruns)) {
nyrs <- 300
#define the environment for this run
source(here("R","sourcefiles","PriEff_Envt.R"))
#define the species in this run
source(here("R","sourcefiles","PriEff_Species.R"))
#run the model for nyrs
source(here("R","sourcefiles","PriEff_Comp.R"))
source(here("R","sourcefiles","PriEff_Model.R"))
# #write out the results for this run
source(here("R","sourcefiles","PriEff_Output.R"))
}
dev.off()
#define the run - Consider creating a dataframe with combinations of parms to test
nruns<-1
outputy<-data.frame()
#outputy2<-data.frame()
#outputy3<-data.frame()
for (j in c(1:nruns)) {
nyrs <- 300
#define the environment for this run
source(here("R","sourcefiles","PriEff_Envt.R"))
#define the species in this run
source(here("R","sourcefiles","PriEff_Species.R"))
#run the model for nyrs
source(here("R","sourcefiles","PriEff_Comp.R"))
source(here("R","sourcefiles","PriEff_Model.R"))
# #write out the results for this run
source(here("R","sourcefiles","PriEff_Output.R"))
}
#define the run - Consider creating a dataframe with combinations of parms to test
nruns<-1
outputy<-data.frame()
#outputy2<-data.frame()
#outputy3<-data.frame()
for (j in c(1:nruns)) {
nyrs <- 300
#define the environment for this run
source(here("R","sourcefiles","PriEff_Envt.R"))
#define the species in this run
source(here("R","sourcefiles","PriEff_Species.R"))
#run the model for nyrs
source(here("R","sourcefiles","PriEff_Comp.R"))
source(here("R","sourcefiles","PriEff_Model.R"))
# #write out the results for this run
source(here("R","sourcefiles","PriEff_Output.R"))
}
#define the run - Consider creating a dataframe with combinations of parms to test
nruns<-1
outputy<-data.frame()
#outputy2<-data.frame()
#outputy3<-data.frame()
for (j in c(1:nruns)) {
nyrs <- 300
#define the environment for this run
source(here("R","sourcefiles","PriEff_Envt.R"))
#define the species in this run
source(here("R","sourcefiles","PriEff_Species.R"))
#run the model for nyrs
source(here("R","sourcefiles","PriEff_Comp.R"))
source(here("R","sourcefiles","PriEff_Model.R"))
# #write out the results for this run
source(here("R","sourcefiles","PriEff_Output.R"))
}
rm(list=ls())
options(stringsAsFactors = FALSE)
setwd("~/Documents/git/timetogerminate/germination_trials/input")
library("brms")
library(tidyverse)
library(lme4)
library(broom)
library(ggstance)
library(RColorBrewer)
#load("GImodels")
d.dat<-read.csv("daily_dat_nointerval.csv",header=TRUE)
goober<-d.dat
goober$chill_time<-NA
goober<- within(goober, chill_time[COLD=="0" ]<-0)
goober<- within(goober, chill_time[COLD=="A" ]<-14)
goober<- within(goober, chill_time[COLD=="B" ]<-28)
goober<- within(goober, chill_time[COLD=="C" ]<-35)
goober<- within(goober, chill_time[COLD=="D" ]<-42)
goober<- within(goober, chill_time[COLD=="E" ]<-49)
goober<- within(goober, chill_time[COLD=="f" ]<-56)
goober<- within(goober, chill_time[COLD=="G" ]<-63)
goober<- within(goober, chill_time[COLD=="H" ]<-77)
goober<- within(goober, chill_time[COLD=="i" ]<-91)
goober$chillweeks<-goober$chill_time/7
goober$warmT<-NA
goober<- within(goober, warmT[INC=="H" ]<-25)
goober<- within(goober, warmT[INC=="L" ]<-20)
goober$germ_perc<-NA
goober$germ_perc<-goober$germ_num/goober$tot_seed
goober$germ_perc<-ifelse(goober$germ_perc>1,1,goober$germ_perc)
goober$incubation<-ifelse(goober$INC=="L","cool","warm")
germ.perc<-goober %>% filter(DAY==25)
germ.perc$final_perc<-germ.perc$germ_num/germ.perc$tot_seed
plot1<-ggplot(goober,aes(DAY,germ_perc))+stat_summary(aes(color=Taxa,shape=Taxa),size=.5)+ stat_smooth(aes(color=Taxa,fill=Taxa),size=0.3,se=FALSE)+
facet_grid(chillweeks~incubation)+
ggthemes::theme_few(base_size = 11)+scale_color_viridis_d(begin=0,end=.5)+scale_fill_viridis_d(begin=0,end=.5)+xlab("Day of trial")+ylab("Germination percentatge")+
theme(legend.text = element_text(face = "italic"),legend.position = "top")
plot1
#germ.perc<-filter(germ.perc, Taxa %in% c("Hesperis matronalis","Cryptotaenia canadensis"))
goober$final_perc<-ifelse(germ.perc$final_perc>1,1,germ.perc$final_perc)
#germ.perc<-filter(germ.perc, Taxa %in% c("Hesperis matronalis","Cryptotaenia canadensis"))
goober$final_perc<-ifelse(goober$final_perc>1,1,goober$final_perc)
View(goober)
#germ.perc<-filter(germ.perc, Taxa %in% c("Hesperis matronalis","Cryptotaenia canadensis"))
goober$final_perc<-ifelse(goober$final_perc>1,1,goober$final_perc)
germ.perc<-goober %>% filter(DAY==25)
germ.perc$final_perc<-germ.perc$germ_num/germ.perc$tot_seed
germ_perc$final_perc<-ifelse(germ_perc$final_perc>1,1,germ.perc$final_perc)
germ.perc$final_perc<-ifelse(germ.perc$final_perc>1,1,germ.perc$final_perc)
plot1a<-ggplot(germ.perc,aes(chillweeks,final_perc*100))+geom_point(aes(color=Taxa,shape=Taxa),size=0.9)+stat_smooth(aes(color=Taxa,fill=Taxa),size=0.5,method="lm",se=FALSE)+facet_wrap(~incubation)+
ggthemes::theme_few(base_size = 11)+scale_color_viridis_d(begin=0,end=.5)+scale_fill_viridis_d(begin=0,end=.5)+xlab("")+ylab("Final germination percentatge")+
theme(legend.text = element_text(face = "italic"))+theme(legend.position = "none")+scale_y_continuous(limits=c(0,100))
plot1a
###or is it better for the actualy
goodsp2<-goodsp %>% group_by(plate_num)  %>%  mutate(weight = rev(DAY))
View(germ.perc)
unique(germ.perc$Taxa)
goodsp<-filter(goober, !Taxa %in% c("Impatiens capensis","Phlox cuspidata","Carex grisea" ))
goodsp<-filter(germ.per, !Taxa %in% c("Impatiens capensis","Phlox cuspidata","Carex grisea" ))
goodsp<-filter(germ.perc, !Taxa %in% c("Impatiens capensis","Phlox cuspidata","Carex grisea" ))
germ.perc$final_perc<-ifelse(germ.perc$final_perc>1,1,germ.perc$final_perc)
plot1a<-ggplot(germ.perc,aes(chillweeks,final_perc*100))+geom_point(aes(color=Taxa,shape=Taxa),size=0.9)+stat_smooth(aes(color=Taxa,fill=Taxa),size=0.5,method="lm",se=FALSE)+facet_wrap(~incubation)+
ggthemes::theme_few(base_size = 11)+scale_color_viridis_d(begin=0,end=.5)+scale_fill_viridis_d(begin=0,end=.5)+xlab("")+ylab("Final germination percentatge")+
theme(legend.text = element_text(face = "italic"))+theme(legend.position = "none")+scale_y_continuous(limits=c(0,100))
ggplot(germ.perc,aes(chillweeks,final_perc*100))+geom_point(aes(color=Taxa,shape=Taxa),size=0.9)+stat_smooth(aes(color=Taxa,fill=Taxa),size=0.5,method="lm",se=FALSE)+facet_wrap(~incubation)+
ggthemes::theme_few(base_size = 11)+scale_color_viridis_d(begin=0,end=.5)+scale_fill_viridis_d(begin=0,end=.5)+xlab("")+ylab("Final germination percentatge")+
theme(legend.text = element_text(face = "italic"))+theme(legend.position = "none")+scale_y_continuous(limits=c(0,100))
ggplot(germ.perc,aes(chillweeks,final_perc*100))+geom_point(aes(color=Taxa,shape=Taxa),size=0.9)+stat_smooth(aes(color=Taxa,fill=Taxa),size=0.5,method="lm",se=FALSE)+facet_wrap(~incubation)+
ggthemes::theme_few(base_size = 11)+xlab("")+ylab("Final germination percentatge")+
theme(legend.text = element_text(face = "italic"))+theme(legend.position = "none")+scale_y_continuous(limits=c(0,100))
###or is it better for the actualy
goodsp2<-goodsp %>% group_by(plate_num)  %>%  mutate(weight = rev(DAY))
goodsp2$weighting<-goodsp2$weight*goodsp2$germ.daily
GIs<-goodsp2 %>% group_by(Taxa,warmT,chillweeks,COLD,incubation,plate_num) %>% summarise(GI=sum(weighting))
GI2<-GIs %>%group_by(Taxa,warmT,chillweeks,COLD,incubation) %>% summarise(mean=mean(GI))
GI3<-GIs %>%group_by(Taxa,warmT,chillweeks,COLD,incubation) %>% summarise(sd=sd(GI))
GIforplot<-left_join(GI2,GI3)
plot2<-ggplot(GIs,aes(chillweeks,GI))+geom_point(aes(color=Taxa),size=0.9)+geom_smooth(method="lm",aes(color=Taxa,fill=Taxa,shape=Taxa),size=0.5,se=FALSE)+facet_wrap(~incubation)+
ggthemes::theme_few(base_size = 11)+scale_color_viridis_d(begin=0,end=.5)+scale_fill_viridis_d(begin=0,end=.5)+xlab("")+ylab("Germination index")+theme(legend.position = "none")
plot2
ggplot(fgp.dat,aes(chillweeks,final_perc))+geom_point(aes(color=Taxa))+geom_smooth(method="lm",aes(color=Taxa,fill=Taxa),size=0.3)+facet_wrap(~INC)+
ggthemes::theme_few(base_size = 11)+scale_color_viridis_d(begin=0,end=.5)+scale_fill_viridis_d(begin=0,end=.5)+xlab("Weeks of cold stratification")+ylab("Germination index")+theme(legend.position = "none")
fgp.dat<-filter(goodsp,DAY==25)
ggplot(fgp.dat,aes(chillweeks,final_perc))+geom_point(aes(color=Taxa))+geom_smooth(method="lm",aes(color=Taxa,fill=Taxa),size=0.3)+facet_wrap(~INC)+
ggthemes::theme_few(base_size = 11)+scale_color_viridis_d(begin=0,end=.5)+scale_fill_viridis_d(begin=0,end=.5)+xlab("Weeks of cold stratification")+ylab("Germination index")+theme(legend.position = "none")
ggplot(fgp.dat,aes(chillweeks,final_perc))+geom_point(aes(color=Taxa))+geom_smooth(method="lm",aes(color=Taxa,fill=Taxa),size=0.3)+facet_wrap(~INC)+
ggthemes::theme_few(base_size = 11)+xlab("Weeks of cold stratification")+ylab("Germination index")+theme(legend.position = "none")
#fgp.dat<-filter(fgp.dat,germ_perc>=.5)
fgp.dat<-dplyr::select(fgp.dat,plate_num,germ_num)
colnames(fgp.dat)[2]<-"finalgerm"
goodsp<-left_join(goodsp,fgp.dat)
plates<-unique(fgp.dat$plate_num)
df<-data.frame(plate_num=numeric(),Taxa=character(),INC=character(),chillweeks=numeric(),T50=numeric())
for (p in seq_along(plates)){
dataoneplate <- dplyr::filter(goodsp, plate_num==plates[p])
t50 <- sum(dataoneplate$DAY*dataoneplate$germ.daily)/dataoneplate$finalgerm
dfhere<-data.frame(plate_num=plates[p],Taxa=unique(dataoneplate$Taxa),INC=unique(dataoneplate$incubation), chillweeks=unique(dataoneplate$chillweeks),T50=t50)
df <- rbind(df, dfhere)
}
plot3<-ggplot(df,aes(chillweeks,T50))+geom_point(aes(color=Taxa,shape=Taxa),size=0.9)+stat_smooth(method="lm",aes(color=Taxa),size=0.5,se=FALSE)+facet_wrap(~INC)+
ggthemes::theme_few(base_size = 11)+scale_color_viridis_d(begin=0,end=.5)+scale_fill_viridis_d(begin=0,end=.5)+xlab("Weeks of cold stratification")+ylab("Mean germination time")+
theme(legend.position = "none")
ggplot(df,aes(chillweeks,T50))+geom_point(aes(color=Taxa,shape=Taxa),size=0.9)+stat_smooth(method="lm",aes(color=Taxa),size=0.5,se=FALSE)+facet_wrap(~INC)+
ggthemes::theme_few(base_size = 11)+scale_color_viridis_d(begin=0,end=.5)+scale_fill_viridis_d(begin=0,end=.5)+xlab("Weeks of cold stratification")+ylab("Mean germination time")+
theme(legend.position = "none")
####MGT
MGT<- df %>% group_by(Taxa,chillweeks,INC)%>%summarize(MGT=mean(T50,na.rm=TRUE),sd=sd(T50,na.rm=TRUE))
MGT$MGT<-round(MGT$MGT,digits = 2)
MGT$sd<-round(MGT$sd,digits = 1)
MGT$MGTsd<-paste(MGT$MGT,MGT$sd,sep = " (")
MGT<-dplyr::select(MGT,Taxa,chillweeks,INC,MGTsd)
MGT<-spread(MGT,Taxa,MGTsd)
time<-goodsp %>% dplyr::group_by(plate_num,Taxa) %>% dplyr::summarize(MGT=mean(DAY))
germ.perc<-filter(germ.perc,Taxa %in% c("Hesperis matronalis","Cryptotaenia canadensis"))
germ.perc$final_perc<-ifelse(germ.perc$final_perc>1.0,1.0,germ.perc$final_perc)
FGP<-dplyr::select(germ.perc,Taxa,chillweeks,INC,final_perc)
FGP<- FGP %>% group_by(Taxa,chillweeks,INC)%>%summarize(FGP=mean(final_perc,na.rm=TRUE),sd=sd(final_perc,na.rm=TRUE))
FGP$FGP<-round(FGP$FGP,digits = 2)
FGP$sd<-round(FGP$sd,digits = 1)
FGP$FGPsd<-paste(FGP$FGP,FGP$sd,sep = " (")
FGP<-dplyr::select(FGP,Taxa,chillweeks,INC,FGPsd)
FGP<-spread(FGP,Taxa,FGPsd)
table.data<-cbind(FGP,MGT)
table.data<-table.data[c(1,2,3,4,7,8)]
ggplot(germ.perc,aes(chillweeks,final_perc))+geom_point(aes(color=Taxa))+stat_smooth(method="glm",aes(color=Taxa))+facet_wrap(~INC)+
ggthemes::theme_few(base_size = 11)+scale_color_viridis_d(begin=0,end=.5)+scale_fill_viridis_d(begin=0,end=.5)+xlab("Weeks of cold stratification")+ylab("FGP")+
theme(legend.position = "none")+ylim(0,1)
plot1
ggpubr::ggarrange(plot1,plot4,nrow=2,ncol=1,common.legend = TRUE,heights=c(.9,.4),labels=c("a)"))
plot4<-ggpubr::ggarrange(plot1a,plot3,plot2,ncol=3,nrow=1,labels = c("b)","c)","d)"))
ggpubr::ggarrange(plot1,plot4,nrow=2,ncol=1,common.legend = TRUE,heights=c(.9,.4),labels=c("a)"))
