n<-length(y)
y=35,34,38,35,37
y=c(35,34,38,35,37)
n<-length(y)
estimate<-mean(y)
se<-sd(y)/sqrt(n)
se
int.50<-estimate+qt(c(.25,.75),n-1)*se
int.50
plot(y)
abline(y)
scatterplot(y)
library(car)
scatterplot(y)
abline(y)
int.95<-estimate+qnorm(.975)*se
in.95
int.95
estimate(700/300)
estimate<-(700/300)
se<-sqrt(estimate*(1-estiamte)/1000)
estimate<-(700/300)
estimate
se<-sqrt(estimate*(1-estiamte)/1000)
se<-sqrt(estimate*(1-estimate)/1000)
int.95<-estimate+qnorm(c(.025,.975))*se
y<-rep(c(0,1,2,3,4), c(600,300, 50,30,20))
mean(y)
n<-length(y)
n<-length(y)
estimate<-mean(y)
se<-sd(y)/sqrt(n)
int.95(estimate+qt(c(.025,.975))*se)
int.95<-(estimate+qt(c(.025,.975))*se)
int.95<-(estimate+qt(c(.025,.975),n-1)*se)
girl<-n(.4777, .4875, .4859, .4754, .4874, .4864, .4813, .4787, .4895, .4797, .4876, .4859, .4857, .4907, .5010, .4903, .4860, .4911, .4871, .4725, .4822, .4870, .4823, .4973)
girl<-c(.4777, .4875, .4859, .4754, .4874, .4864, .4813, .4787, .4895, .4797, .4876, .4859, .4857, .4907, .5010, .4903, .4860, .4911, .4871, .4725, .4822, .4870, .4823, .4973)
mean(c)
mean(girl)
sd(girl)
mean(theor)
theor<-c(.5,.5,.5)
mean(theor)
sd(theor)
sd(girl)
sd_exp<-sqrt((.486)(1-.486)/3903)
sqrt((.486)(1-.486)/3903)
sqrt((.486)(1-.486)/3903))
sqrt((.486)(1-.486)/3903)
mean(girl)
sd(girl)
sqrt((.485675)^2/(3903-1))
chisq.test(sd(girl),0.007775031)
meangirl<-mean(girl)
int.95 <- meangirl + qt(c(.025,.975),3903-1)
int.95
esde<-sqrt((.485675)^2/(3903-1))
esde
se<=esde(sqrt(3903))
sE<=esde(sqrt(3903))
esde/(sqrt(3903))
SE<-esde/(sqrt(3903))
int.95 <- meangirl + qt(c(.025,.975),3903-1)*SE
int.95
mean(girl)
meangirl<-mean(girl)
sd(girl)
sqrt((.486)(1-.486)/3903)
sqrt((.486)*(1-.486)/3903)
obs<-sd(girl) #observed sd
exp<-sqrt((.486)*(1-.486)/3903) ##should be expected sd based on observed mean if there was not variation butIsn't this the standard error formula not standard deviation?
chisq.test((obs)-(exp))^2/(exp))
se(obs)
se<-obs/sqrt(3903)
se
2*se
obs+(2*se)
obs-(2*se)
int.95 <- meangirl + qnorm(c(.025,.975))*exp
int.95
vector1<-c(0,50,mean=35, sd=10)
vector1
new<-rescale(vector1,mean=100, sd=15)
rescale(vector1,mean=100, sd=15)
help.search(rescaling)
help.search(rescale)
vector1<-c(0,50,mean=35, sd=10)
rescale(vector1,mean=100, sd=15)
runif(20,min=1, max=100)
h<-runif(20,min=1, max=100)
h
h
h
runif(20,min=1, max=100)
#(4)
runif(20,min=1, max=100)
sum(above)
sum(runif(20,min=1, max=100))
sum(runif(20,min=1, max=100))
for (sum(runif(20,min=1, max=100)))
for(i in 1-1000) {sum(runif(20,min=1, max=100))}
three<-for(i in 1-1000) {sum(runif(20,min=1, max=100))}
three#(4)
three<-for(i in 1-1000) {sum(runif(20,min=1, max=100))}
for(i in 1-1000) {sum(runif(20,min=1, max=100))}
h= sum(runif(20,min=1, max=100)
hfor(i in 1-1000) {sum(runif(20,min=1, max=100))}
h
h
#1) Atest is graded from 0to50,with an averagescore of 35and a standard deviation of 10.
s=c()
h= sum(runif(20,min=1, max=100)
for(i in 1-1000) {s[i]=h[i])}
for(i in 1-1000) {s[i]=h[i]}
s
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
library(plotrix)
library(gdata)
library(nlme)
library(scales)
library(arm)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gridExtra)
library(knitr)
library(xtable)
require(vegan)
data(sipoo)
View(sipoo)
out <- oecosimu(sipoo, decorana, "swap", burnin=100, thin=10, statistic="evals")
out
decorana
plot(as.ts(out))
lag.plot(as.ts(out))
acf(as.ts(out))
## Density plot: needs lattice
require(lattice)
densityplot(out, as.table = TRUE)
## Use quantitative null models to compare
## mean Bray-Curtis dissimilarities
data(dune)
meandist <- function(x) mean(vegdist(x, "bray"))
mbc1 <- oecosimu(dune, meandist, "r2dtable")
mbc1
## Define a custom function that shuffles
## cells in each rows
f <- function(x) {
apply(x, 2, function(z) sample(z, length(z)))
}
mbc2 <- oecosimu(as.matrix(dune), meandist, f)
mbc2
mbc2 <- oecosimu(as.matrix(dune), meandist, f)
data(dune)
meandist <- function(x) mean(vegdist(x, "bray"))
mbc1 <- oecosimu(dune, meandist, "r2dtable")
mbc1
## Define a custom function that shuffles
## cells in each rows
f <- function(x) {
apply(x, 2, function(z) sample(z, length(z)))
}
mbc2 <- oecosimu(as.matrix(dune), meandist, f)
mbc2
mbc2 <- oecosimu(as.matrix(dune),NULL, meandist, f)
mbc2 <- oecosimu(as.matrix(dune),arg= meandist, f)
data(sipoo)
rm(list=ls())
options(stringsAsFactors = FALSE)
require(vegan)
data(sipoo)
View(sipoo)
data <- cbind(c("A","B","C","A"), c("John", "Kendra", "Martin", "Steve"), c("12","12","13","14"))
colnames(data) <- c("Group", "Name", "Score")
data <- as.data.frame(data)
p <- ggplot(data, aes(x = Name, y = Score, fill = Name)) +
geom_point(pch = 19, aes(col = Group)) +
scale_colour_manual(values = c("black", "red", "green")) +
guides(fill = FALSE); p
library(ggplot2)
p <- ggplot(data, aes(x = Name, y = Score, fill = Name)) +
geom_point(pch = 19, aes(col = Group)) +
scale_colour_manual(values = c("black", "red", "green")) +
data = cbind(c("A","B","C","A"), c("John", "Kendra", "Martin", "Steve"), c("12","12","13","14"))
colnames(data) = c("Group", "Name", "Score")
data = as.data.frame(data)
p = ggplot(data, aes(x=Name, y=Score, fill=Name)) + geom_point(pch = 19, aes(col=Group)) + scale_colour_manual(values=c("black", "red", "green"))
print(p)
ggplot(iris) + geom_point(aes(x=Sepal.Width, y=Sepal.Length, color=Species, size=Sepal.Length))
ggplot(iris) + geom_point(aes(x=Sepal.Width, y=Sepal.Length, color=Species, size=Sepal.Length))
ggplot(iris) + geom_point(aes(x=Sepal.Width, y=Sepal.Length, color=Species, size=Sepal.Length)+scale_color_discrete(breaks="setosa"))
ggplot(iris) + geom_point(aes(x=Sepal.Width, y=Sepal.Length, color=Species, size=Sepal.Length))+scale_color_discrete(breaks="setosa"))
ggplot(iris) + geom_point(aes(x=Sepal.Width, y=Sepal.Length, color=Species, size=Sepal.Length))
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
24+18+12+6+0+
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
130*3
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
390*3
10*4*2
den<-12+8+4+2
reps<-den*3
treatments<-reps*2
surface<-24+18+12+6+0+
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
treaties<-surface*3 #=390
backup<-3*surface
treaties<-backup*3 #=390
surface<-24+18+12+6+0+
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
##130 seeds of each species * 3 treatments
backup<-3*surface
treaties<-backup*3 #=390
surface<-24+18+12+6+0+
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
##130 seeds of each species * 3 treatments
backup<-3*surface
treaties<-backup*3 #=1170
#GERMINATION TRIALS
#10 seeds per petri dish, 32? dishes per chamber * 8 species
# 4 replicates of 10
dish<-10
reps<-dish*4
germtreat<-reps*2
#80 seeds/species
### for testing pairwise
den<-12+8+4+2
reps<-den*3
treatments<-reps*2
##156
treaties+treatments+germtreat
warnings()
\begin{tabular*}{10 cm}{|l|l|}
1000/10/2
50\3
50/3
16*3*2*10
rm(list=ls())
options(stringsAsFactors = FALSE)
setwd("~/Documents/git/timetogerminate/germination_trials/)
setwd("~/Documents/git/timetogerminate/germination_trials/")
setwd("~/Documents/git/timetogerminate/germination_trials/")
library(tidyverse)
install.packages("growthcurver")
library("growthcurver")
data<-read.csv("nochill_practice_data.csv" header=TRUE)
data<-read.csv(nochill_practice_data.csv, header=TRUE)
data<-read.csv("nochill_practice_data.csv", header=TRUE)
View(data)
data<-gather(data,germination,date,7:13)
View(data)
data<-read.csv("nochill_practice_data.csv", header=TRUE)
Â data<-gather(data,"germination","date",7:13)
View(data)
data<-read.csv("nochill_practice_data.csv", header=TRUE)
ncol(data)
data<-gather(data,"date,"germination",7:18)
data<-gather(data,"date","germination",7:18)
View(data)
gplot(data, aes(x = date, y = germination)) + geom_point(alpha=0.7)
ggplot(data, aes(x = date, y = germination)) + geom_point(alpha=0.7)
ggplot(data, aes(x = date, y = germination, group=TAXA)) + geom_point(alpha=0.7)
ggplot(data, aes(x = date, y = germination, color=TAXA)) + geom_point(alpha=0.7)
ggplot(data, aes(x = date, y = germination, color=TAXA,shape=treatment)) + geom_point(alpha=0.7)
ggplot(data, aes(x = date, y = germination, color=TAXA,shape=INC)) + geom_point(alpha=0.7)
model.1 <- SummarizeGrowth(data$date, data$germination)
data$germination<-as.numeric(data$germination)
data$date<-as.numeric(date$germination)
View(data)
data$date<-as.date(date$germination)
rm(list=ls())
options(stringsAsFactors = FALSE)
setwd("~/Documents/git/timetogerminate/germination_trials/")
library(tidyverse)
library("growthcurver")
data<-read.csv("nochill_practice_data.csv", header=TRUE)
ncol(data)
data<-gather(data,"date","germination",7:18)
data$germination<-as.numeric(data$germination)
ggplot(data, aes(x = date, y = germination, color=TAXA,shape=INC)) + geom_point(alpha=0.7)
model.1 <- SummarizeGrowth(data$date, data$germination)
data$date<-as.date(data$date)
data$date<-as.numeric(data$date)
View(data)
rm(list=ls())
options(stringsAsFactors = FALSE)
setwd("~/Documents/git/timetogerminate/germination_trials/")
library(tidyverse)
library("growthcurver")
data<-read.csv("nochill_practice_data.csv", header=TRUE)
ncol(data)
data$Date<-as.Date(data$date,format =  "%m/%d/%y")
library(lubridate)
library("Hmisc")
data<-read.csv("nochill_practice_data.csv", header=TRUE)
ncol(data)
data$Date<-as.Date(data$date,format =  "%m/%d/%y")
library(lubridate)
data<-gather(data,"date","germination",7:18)
data$germination<-as.numeric(data$germination)
data$Date<-as.Date(data$date,format =  "%m/%d/%y")
data$day<-yday(data$date)
View(data)
rm(list=ls())
options(stringsAsFactors = FALSE)
setwd("~/Documents/git/timetogerminate/germination_trials/")
library(tidyverse)
library("growthcurver")
library(lubridate)
library("Hmisc")
data<-read.csv("nochill_practice_data.csv", header=TRUE)
View(data)
rm(list=ls())
options(stringsAsFactors = FALSE)
setwd("~/Documents/git/timetogerminate/germination_trials/")
library(tidyverse)
library("growthcurver")
library(lubridate)
library("Hmisc")
data<-read.csv("nochill_practice_data.csv", header=TRUE)
View(data)
rm(list=ls())
options(stringsAsFactors = FALSE)
setwd("~/Documents/git/timetogerminate/germination_trials/")
library(tidyverse)
library("growthcurver")
library(lubridate)
library("Hmisc")
data<-read.csv("nochill_practice_data.csv", header=TRUE)
View(data)
View(data)
colnames(data)<-(c("zero_day","tot_seed","Taxa","INC","COLD","plate_num","8/28/18","8/29/18",	"8/30/18",	"8/31/18",	"9/3/18",	"9/5/18",	"9/7/18",	"9/9/18",	"9/12/18",	"9/14/18",	"9/16/18",	"9/17/18"))
ncol(data)
data<-gather(data,"date","germination",7:18)
data$germination<-as.numeric(data$germination)
data$Date<-as.Date(data$date,format =  "%m/%d/%y")
data$day<-yday(data$date)
data$Date<-as.Date(data$date,format =  "%m/%d/%y")
ggplot(data, aes(x = date, y = germination, color=TAXA,shape=INC)) + geom_point(alpha=0.7)
ggplot(data, aes(x = date, y = germination, color=Taxa,shape=INC)) + geom_point(alpha=0.7)
model.1 <- SummarizeGrowth(data$date, data$germination)
data$day<-yday(data$date)
data$Date<-as.Date(data$date,format =  "%m/%d/%y")
data$date<-as.Date(data$date,format =  "%m/%d/%y")
data$day<-yday(data$date)
unique(d$day)
unique(data$day)
start<-yday("2018/08/27")
data$DAY<-data$day-start
ggplot(data, aes(x = DAY, y = germination, color=Taxa,shape=INC)) + geom_point(alpha=0.7)
model.1 <- SummarizeGrowth(data$DAY, data$germination)
predict(model.1$model)
model.1$vals
data$germination<-ifelse(is.na(data$germination,0,data$germination)
data$germination<-ifelse(is.na(data$germination,0,data$germination))
data$germination<-ifelse(is.na(data$germination),0,data$germination))
data$germination<-ifelse(is.na(data$germination),0,data$germination)
ggplot(data, aes(x = DAY, y = germination, color=Taxa,shape=INC)) + geom_point(alpha=0.7)
model.1 <- SummarizeGrowth(data$DAY, data$germination)
model.1$vals
predict(model.1$model)
plot(model1)
plot(model.1)
ggplot(data, aes(x = DAY, y = germination, color=Taxa,shape=INC)) + geom_point(alpha=0.7)
ggplot(data, aes(x = DAY, y = germination, color=INC)) + geom_point(alpha=0.7)+facet_wrap(~Taxa)
ggplot(data, aes(x = DAY, y = germination, color=INC)) + geom_point(alpha=0.7)+facet_wrap(~Taxa)+geom_line(data=data, aes(y=germination, color=INC))
ggplot(data, aes(x = DAY, y = germination, color=INC)) + stat_summary(alpha=0.7)+facet_wrap(~Taxa)+geom_line(data=data, aes(y=germination, color=INC))
ggplot(data, aes(x = DAY, y = germination, color=INC)) + stat_summary(alpha=0.7)+facet_wrap(~Taxa)+geom_line(data=data, aes(y=germination))
ggplot(data, aes(x = DAY, y = germination, color=INC)) + stat_summary(alpha=0.7)+facet_wrap(~Taxa)
ggplot(data, aes(x = DAY, y = germination, color=INC)) + stat_summary(alpha=0.7)+facet_wrap(~Taxa)+theme_bw()
ggplot(data, aes(x = DAY, y = germination, color=INC)) + stat_summary(alpha=0.7)+facet_wrap(~Taxa)+theme_bw()+geom_line()
ggplot(data, aes(x = DAY, y = germination, color=INC)) + stat_summary(alpha=0.7)+facet_wrap(~Taxa)+theme_bw()+geom_line(stat = "summary", fun.y = mean)
