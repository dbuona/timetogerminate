data = dat, family = gaussian(),
iter= 4000,
warmup = 3000)
mod.flo.int<-brm(flo_day~ Chill+Light+Force+Chill:Light+Chill:Force+Force:Light+(Chill+Light+Force+Chill:Light+Chill:Force+Force:Light|GEN.SPA),
data = dat, family = gaussian(),
iter= 4000,
warmup = 3000)
figpath <- "Plots"
cols <- adjustcolor("indianred3", alpha.f = 0.3)
my.pal <- rep(brewer.pal(n = 10, name = "Paired"), 8)
# display.brewer.all()
alphahere = 0.4
xlab <- "Model estimate of change in phenophase day"
spp <- unique(dat$GEN.SPA)
modelhere <-mod.bb.int
modelhere2<-mod.flo.int
source("exp_muplot_brms.R")
source("exp_muplot_brms.R")
source("prep4plot.R")
Intercept <- coef(modelhere, prob=c(0.25, 0.75))$GEN.SPA[, c(1, 3:4), 1] %>% ## here we make find the posterior distributions and means for each predictor
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select(mean, `25%`, `75%`) ### can change according to uncertainty intervals you want
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("Intercept", "[", i, "]", sep="")}
Intercept$parameter<-new.names
Chill <- coef(modelhere, prob=c(0.25, 0.75))$GEN.SPA[, c(1, 3:4), 2] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("Chill", "[", i, "]", sep="")
}
Chill$parameter<-new.names
mod.ranef<-full_join(Intercept, Chill)
Light <- coef(modelhere, prob=c(0.25, 0.75))$GEN.SPA[, c(1, 3:4), 3] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("Light", "[", i, "]", sep="")
}
Light$parameter<-new.names
mod.ranef <- full_join(mod.ranef, Light)
Force <- coef(modelhere, prob=c(0.25, 0.75))$GEN.SPA[, c(1, 3:4), 4] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("Force", "[", i, "]", sep="")
}
Force$parameter<-new.names
mod.ranef<-full_join(mod.ranef, Force)
Chill:Light <-coef(modelhere, prob=c(0.25, 0.75))$GEN.SPA[, c(1, 3:4), 5] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("Chill:Light", "[", i, "]", sep="")
}
Chill:Light <- coef(modelhere, prob=c(0.25, 0.75))$GEN.SPA[, c(1, 3:4), 5] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
Chill:Light <- coef(modelhere, prob=c(0.25, 0.75))$GEN.SPA[, c(1, 3:4), 5] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
source("exp_muplot_brms.R")
source("prep4plot.R")
muplotfx(modelhere,modelhere2, "budburst vs. flowering", 8, 8, c(0,4), c(-50, 120) , 130, 3.5)
source("exp_muplot_brms.R")
muplotfx(modelhere,modelhere2, "budburst vs. flowering", 8, 8, c(0,4), c(-50, 120) , 130, 3.5)
dev.off()
## Started 3 April 2019 ##
## By Cat - based off code from Lizzie's OSPREE plots ##
# Runs from models_stan_plotting.R #
# with COLORS for each species #
muplotfx <- function(modelhere,modelhere2, nameforfig, width, height, ylim, xlim, leg1, leg2){
spnum <- unique(dat$GEN.SPA) ### need to change
pdf(file.path(figpath, paste("", nameforfig, ".pdf", sep="")),
width = width, height = height)
par(xpd=FALSE)
par(mar=c(5,7,3,10))
plot(x=NULL,y=NULL, xlim=xlim, yaxt='n', ylim=ylim,
xlab=xlab, ylab="", main=nameforfig)
axis(2, at=1:7, labels=rev(c("Intercept","Chill", "Light", "Force","Chill:Light","Chill:Force","Light:Force")), las=1) ### Need to change
abline(v=0, lty=2, col="darkgrey")
rownameshere <- c("b_Intercept","b_Chill", "b_Light", "b_Force","b_Chill:Light","b_Chill:Force","b_Light:Force") ### Need to change
ppeffects <- c("b_Intercept","b_Chill", "b_Light", "b_Force","b_Chill:Light","b_Chill:Force","b_Light:Force") ### Need to change
for(i in 1:7){#i=1 ## need to change
pos.y<-(7:1)[i] ### need to change
pos.x<-modoutput1[(modoutput1$term==rownameshere[i]),"estimate"]
lines(modoutput1[(modoutput1$term==rownameshere[i]),c("lower","upper")],rep(pos.y,2),col="darkgrey")
pos.x2<-modoutput2[(modoutput2$term==rownameshere[i]),"estimate"]
lines(modoutput2[(modoutput2$term==rownameshere[i]),c("lower","upper")],rep(pos.y,2),col="darkgrey")
points(pos.x,pos.y,cex=1.5,pch=19,col="darkblue")
points(pos.x2,pos.y,cex=1.5,pch=17,col="darkblue")
for(spsi in 1:length(spnum)){#
pos.sps.i<-which(grepl(paste("[",spsi,"]",sep=""),mod.ranef$parameter,fixed=TRUE))
jitt<-runif(1,0.05,0.4)
pos.y.sps.i<-pos.y-jitt
pos.x.sps.i<-mod.ranef[pos.sps.i[i],"mean"]
pos.x.sps.2<-mod.ranef2[pos.sps.i[i],"mean"]
lines(mod.ranef[pos.sps.i[i],c("25%","75%")],rep(pos.y.sps.i,2),
col=alpha(my.pal[spsi], alphahere))
lines(mod.ranef2[pos.sps.i[i],c("25%","75%")],rep(pos.y.sps.i,2),
col=alpha(my.pal[spsi], alphahere))
points(pos.x.sps.i,pos.y.sps.i,cex=0.8,pch=19, col=alpha(my.pal[spsi], alphahere))
points(pos.x.sps.2,pos.y.sps.i,cex=0.8,pch=17, col=alpha(my.pal[spsi], alphahere))
}
}
par(xpd=TRUE) # so I can plot legend outside
legend(leg1, leg2, sort(unique(gsub("_", " ", dat$GEN.SPA))), pch=rep(c(19,17),each=10), ### need to change
col=alpha(my.pal[1:length(spnum)], alphahere),
cex=1, bty="n", text.font=3)
}
muplotfx(modelhere,modelhere2, "budburst vs. flowering", 8, 8, c(0,7), c(-50, 120) , 130, 3.5)
dev.off()
muplotfx <- function(modelhere,modelhere2, nameforfig, width, height, ylim, xlim, leg1, leg2){
spnum <- unique(dat$GEN.SPA) ### need to change
pdf(file.path(figpath, paste("", nameforfig, ".pdf", sep="")),
width = width, height = height)
par(xpd=FALSE)
par(mar=c(5,7,3,10))
plot(x=NULL,y=NULL, xlim=xlim, yaxt='n', ylim=ylim,
xlab=xlab, ylab="", main=nameforfig)
axis(2, at=1:7, labels=rev(c("Intercept","Chill", "Light", "Force","Chill:Light","Chill:Force","Light:Force")), las=1) ### Need to change
abline(v=0, lty=2, col="darkgrey")
rownameshere <- c("b_Intercept","b_Chill", "b_Light", "b_Force","b_Chill:Light","b_Chill:Force","b_Light:Force") ### Need to change
ppeffects <- c("b_Intercept","b_Chill", "b_Light", "b_Force","b_Chill:Light","b_Chill:Force","b_Light:Force") ### Need to change
for(i in 1:7){#i=1 ## need to change
pos.y<-(7:1)[i] ### need to change
pos.x<-modoutput1[(modoutput1$term==rownameshere[i]),"estimate"]
lines(modoutput1[(modoutput1$term==rownameshere[i]),c("lower","upper")],rep(pos.y,2),col="darkgrey")
pos.x2<-modoutput2[(modoutput2$term==rownameshere[i]),"estimate"]
lines(modoutput2[(modoutput2$term==rownameshere[i]),c("lower","upper")],rep(pos.y,2),col="darkgrey")
points(pos.x,pos.y,cex=1.5,pch=19,col="darkblue")
points(pos.x2,pos.y,cex=1.5,pch=17,col="darkblue")
for(spsi in 1:length(spnum)){#
pos.sps.i<-which(grepl(paste("[",spsi,"]",sep=""),mod.ranef$parameter,fixed=TRUE))
jitt<-runif(1,0.05,0.5)
pos.y.sps.i<-pos.y-jitt
pos.x.sps.i<-mod.ranef[pos.sps.i[i],"mean"]
pos.x.sps.2<-mod.ranef2[pos.sps.i[i],"mean"]
lines(mod.ranef[pos.sps.i[i],c("25%","75%")],rep(pos.y.sps.i,2),
col=alpha(my.pal[spsi], alphahere))
lines(mod.ranef2[pos.sps.i[i],c("25%","75%")],rep(pos.y.sps.i,2),
col=alpha(my.pal[spsi], alphahere))
points(pos.x.sps.i,pos.y.sps.i,cex=0.8,pch=19, col=alpha(my.pal[spsi], alphahere))
points(pos.x.sps.2,pos.y.sps.i,cex=0.8,pch=17, col=alpha(my.pal[spsi], alphahere))
}
}
par(xpd=TRUE) # so I can plot legend outside
legend(leg1, leg2, sort(unique(gsub("_", " ", dat$GEN.SPA))), pch=rep(c(19,17),each=10), ### need to change
col=alpha(my.pal[1:length(spnum)], alphahere),
cex=1, bty="n", text.font=3)
}
muplotfx(modelhere,modelhere2, "budburst vs. flowering", 8, 8, c(0,7), c(-50, 120) , 130, 3.5)
dev.off()
lo.int<-get_prior(leaf_day.15.~Chill+Light+Force+Chill:Light+Chill:Force+Force:Light,data = dat, family = gaussian())
mod.lo.int<-brm(leaf_day.15. ~ Chill+Light+Force+Chill:Light+Chill:Force+Force:Light+(Chill+Light+Force+Chill:Light+Chill:Force+Force:Light|GEN.SPA),
data = dat, family = gaussian(),
iter= 4000,
warmup = 3000)
modelhere <-mod.lo.int
source("prep4plot.R")
muplotfx(modelhere,modelhere2, "leafout vs. flowering", 8, 8, c(0,7), c(-50, 120) , 130, 3.5)
muplotfx(modelhere,modelhere2, "leafout vs. flowering", 8, 8, c(0,7), c(-50, 120) , 130, 3.5)
modelhere <-mod.lo.int
source("prep4plot.R")
source("exp_muplot_brms.R")
muplotfx(modelhere,modelhere2, "leafout vs. flowering", 8, 8, c(0,7), c(-50, 120) , 130, 3.5)
modelhere <-mod.bb.int
modelhere2<-mod.flo.int
source("exp_muplot_brms.R")
source("prep4plot.R")
muplotfx(modelhere,modelhere2, "budburst vs. flowering", 8, 8, c(0,7), c(-50, 120) , 130, 3.5)
dev.off()
modelhere <-mod.lo.int
source("prep4plot.R")
source("exp_muplot_brms.R")
muplotfx(modelhere,modelhere2, "leafout vs. flowering", 8, 8, c(0,7), c(-50, 120) , 130, 3.5)
dev.off()
hysters<-c("COM.PER","COR.COR","ACE.RUB")
dat$hysteranthous<-ifelse(dat$GEN.SPA %in% hysters,1,0)
hyster.dat<-filter(dat,GEN.SPA %in% hysters)
mod.flo.hyster<-brm(flo_day~ Chill+Light+Force+Chill:Light+Chill:Force+Force:Light,
data = hyster.dat,
iter= 4000,
warmup = 3000)
mod.flo.hyster
sers.dat<-filter(dat,!GEN.SPA %in% hysters)
mod.flo.ser<-brm(flo_day~ Chill+Light+Force+Chill:Light+Chill:Force+Force:Light,
data = sers.dat,
iter= 4000,
warmup = 3200)
mod.flo.ser
mod.flo.hyster
mod.flo.ser
mod.bb.hyster<-brm(budburst.9.~ Chill+Light+Force+Chill:Light+Chill:Force+Force:Light,
data = hyster.dat,
iter= 4000,
warmup = 3200)
mod.bb.ser<-brm(budburst.9.~ Chill+Light+Force+Chill:Light+Chill:Force+Force:Light,
data = sers.dat,
iter= 4000,
warmup = 3200)
mod.bb.hyster
mod.bb.ser
mod.bb.hyster
pp_check(mod.lo.int)
pp_check(mod.lo.int)
pp_average(mod.lo.int)
pp_average(mod.lo.int,mod.flo.int)
pp_check(mod.lo.int)
pp_check(mod.lo.int)
options(device = "quartz")
pp_check(mod.lo.int)
pp_check(mod.lo.int)
windows()pp_check(mod.lo.int)
windows(pp_check(mod.lo.int))
windows();pp_check(mod.lo.int)
dev.new()
pp_check(mod.lo.int)
pp_check(mod.flo.int)
pp_check(mod.bb.int)
rm(list=ls())
options(stringsAsFactors = FALSE)
library(survival)
library(ggplot2)
library(dplyr)
library("ggfortify")
library("icenReg")
library("emmeans")
library(drc)
library(lme4)
library(brms)
library(ggstance)
setwd("~/Documents/git/timetogerminate/germination_trials/input")
load("survmodel")
d<-read.csv("..//survival_analysis/surival_dat_nointerval.csv")
d$DAY<-ifelse(d$DAY==0,0.00001,d$DAY)
d<-read.csv("..//survival_analysis/surival_dat_nointerval.csv")
d$chillweeks<-d$chill_time/7 # make chilling weeks instead of days
d$force<-NA # make forcing numeric
d<- within(d, force[INC=="L"]<-0)
d<- within(d, force[INC=="H"]<-5)
###brms is backwords from other survival
d$censored<-ifelse(d$germinated==1,0,1)
d<- filter(d,!Taxa %in% c("Phlox cuspidata","Impatiens capensis","Carex grisea"))
d$censored<-ifelse(d$DAY==0.00001 & d$germinated==1,-1,d$censored)
##try weibull
priorz<-get_prior(DAY | cens(censored)~chillweeks*force+(chillweeks*force|Taxa),data=d,family= lognormal, inits = "0")
priorz.wei<-get_prior(DAY | cens(censored)~chillweeks*force+(chillweeks*force|Taxa),data=d,family= weibull(), inits = "0")
d$censored<-ifelse(d$germinated==1,0,1)
d<- filter(d,!Taxa %in% c("Phlox cuspidata","Impatiens capensis","Carex grisea"))
d$censored<-ifelse(d$DAY==0.00001 & d$germinated==1,-1,d$censored)
##try weibull
priorz.wei<-get_prior(DAY | cens(censored)~chillweeks*force+(chillweeks*force|Taxa),data=d,family= weibull(), inits = "0")
fit.wei <- brm(DAY | cens(censored)~chillweeks*force+(chillweeks*force|Taxa),
data=d, family =   weibull(), inits = "0" ,prior=priorz.wei,iter=8000,warmup = 7000, chains=4) ## 8 divergent trainsitions
priorz.wei<-get_prior(DAY | cens(censored)~chillweeks*force+(chillweeks*force|Taxa),data=d,family= weibull(), inits = "0")
rm(list=ls())
options(stringsAsFactors = FALSE)
library(survival)
library(ggplot2)
library(dplyr)
library("ggfortify")
library("icenReg")
library("emmeans")
library(drc)
library(lme4)
library(brms)
library(ggstance)
setwd("~/Documents/git/timetogerminate/germination_trials/input")
load("survmodel")
d<-read.csv("..//survival_analysis/surival_dat_nointerval.csv")
d$chillweeks<-d$chill_time/7 # make chilling weeks instead of days
d$force<-NA # make forcing numeric
d<- within(d, force[INC=="L"]<-0)
d<- within(d, force[INC=="H"]<-5)
###brms is backwords from other survival
d$censored<-ifelse(d$germinated==1,0,1)
d<- filter(d,!Taxa %in% c("Phlox cuspidata","Impatiens capensis","Carex grisea"))
d$censored<-ifelse(d$DAY==0.00001 & d$germinated==1,-1,d$censored)
d<-read.csv("..//survival_analysis/surival_dat_nointerval.csv")
d$chillweeks<-d$chill_time/7 # make chilling weeks instead of days
d$force<-NA # make forcing numeric
d<- within(d, force[INC=="L"]<-0)
d<- within(d, force[INC=="H"]<-5)
###brms is backwords from other survival
d$censored<-ifelse(d$germinated==1,0,1)
d<- filter(d,!Taxa %in% c("Phlox cuspidata","Impatiens capensis","Carex grisea"))
d$censored<-ifelse(d$DAY==0.00001 & d$germinated==1,-1,d$censored)
priorz.wei<-get_prior(DAY | cens(censored)~chillweeks*force+(chillweeks*force|Taxa),data=d,family= weibull(), inits = "0")
priorz.wei<-get_prior(DAY | cens(censored)~chillweeks*force+(chillweeks*force|Taxa),data=d,family= weibull())
fit.wei <- brm(DAY | cens(censored)~chillweeks*force+(chillweeks*force|Taxa),
data=d, family =   weibull() ,prior=priorz.wei,iter=8000,warmup = 7000, chains=4) ## 8 divergent trainsitions
d$DAY<-ifelse(d$DAY==0,0.00001,d$DAY)
d<-read.csv("..//survival_analysis/surival_dat_nointerval.csv")
d$DAY<-ifelse(d$DAY==0,0.00001,d$DAY)
d$chillweeks<-d$chill_time/7 # make chilling weeks instead of days
d$force<-NA # make forcing numeric
d<- within(d, force[INC=="L"]<-0)
d<- within(d, force[INC=="H"]<-5)
###brms is backwords from other survival
d$censored<-ifelse(d$germinated==1,0,1)
d<- filter(d,!Taxa %in% c("Phlox cuspidata","Impatiens capensis","Carex grisea"))
d$censored<-ifelse(d$DAY==0.00001 & d$germinated==1,-1,d$censored)
##try weibull
priorz.wei<-get_prior(DAY | cens(censored)~chillweeks*force+(chillweeks*force|Taxa),data=d,family= weibull())
fit.wei <- brm(DAY | cens(censored)~chillweeks*force+(chillweeks*force|Taxa),
data=d, family =   weibull() ,prior=priorz.wei,iter=8000,warmup = 7000, chains=4) ## 8 divergent trainsitions
crypto<-filter(d,Taxa=="Cryptotaenia canadensis")
priorz.wei<-get_prior(DAY | cens(censored)~chillweeks*force+(chillweeks*force|Taxa),data=crypto,family= weibull())
fit.wei.crypto <- brm(DAY | cens(censored)~chillweeks*force,
data=crypto, family =   weibull() ,prior=priorz.wei,iter=8000,warmup = 7000, chains=4)
priorz.wei<-get_prior(DAY | cens(censored)~chillweeks*force+(chillweeks*force|Taxa),data=crypto,family= weibull())
fit.wei.crypto <- brm(DAY | cens(censored)~chillweeks*force,
data=crypto, family =   weibull() ,prior=priorz.wei,iter=8000,warmup = 7000, chains=4)
fit.wei.crypto <- brm(DAY | cens(censored)~chillweeks*force, data=crypto, family =   weibull() ,prior=priorz.wei,iter=4000,warmup = 3000, chains=4)
rm(list=ls())
options(stringsAsFactors = FALSE)
library(survival)
library(ggplot2)
library(dplyr)
library("ggfortify")
library("icenReg")
library("emmeans")
library(drc)
library(lme4)
library(brms)
library(ggstance)
setwd("~/Documents/git/timetogerminate/germination_trials/input")
load("survmodel")
d<-read.csv("..//survival_analysis/surival_dat_nointerval.csv")
d$DAY<-ifelse(d$DAY==0,0.00001,d$DAY)
d$chillweeks<-d$chill_time/7 # make chilling weeks instead of days
d$force<-NA # make forcing numeric
d<- within(d, force[INC=="L"]<-0)
d<- within(d, force[INC=="H"]<-5)
###brms is backwords from other survival
d$censored<-ifelse(d$germinated==1,0,1)
d<- filter(d,!Taxa %in% c("Phlox cuspidata","Impatiens capensis","Carex grisea"))
d$censored<-ifelse(d$DAY==0.00001 & d$germinated==1,-1,d$censored)
##try weibull
crypto<-filter(d,Taxa=="Cryptotaenia canadensis")
priorz.wei<-get_prior(DAY | cens(censored)~chillweeks*force+(chillweeks*force|Taxa),data=crypto,family= weibull())
fit.wei.crypto <- brm(DAY | cens(censored)~chillweeks*force, data=crypto, family =   weibull() ,prior=priorz.wei,iter=4000,warmup = 3000, chains=4)
priorz.wei<-get_prior(DAY | cens(censored)~chillweeks*force,data=crypto,family= weibull())
fit.wei.crypto <- brm(DAY | cens(censored)~chillweeks*force, data=crypto, family =   weibull() ,prior=priorz.wei,iter=4000,warmup = 3000, chains=4)
fit.wei.crypto
new.data <- data.frame(
chillweeks = c(rep(pred.weeks,each=1)),
force = c(rep(pred.force,each=1)))
pred.weeks<-c(0,9)
pred.force<-c(0)
new.data <- data.frame(chillweeks = c(rep(pred.weeks,each=1)),
force = c(rep(pred.force,each=1)))
daty.wei<-predict(fit.wei.c`,probs =c(0.25,.75),newdata=new.data)### something is wrong with error
daty.wei<-predict(fit.wei.crypto,probs =c(0.25,.75),newdata=new.data)### something is wrong with error
daty.wei<-predict(fit.wei.crypto,probs =c(0.25,.75),newdata=new.data)### something is wrong with error
daty.wei<-cbind(daty.wei,new.data)
ggplot(daty.wei,aes(x=Estimate,y=0, color=Taxa,label=Taxa))+
xlim(-20,120)+ylim(-5,20)+geom_point(position=pd,aes(color=Taxa),size=4)+
geom_vline(aes(xintercept=Estimate, color= Taxa))+
facet_grid(as.factor(force)~as.factor(chillweeks))+theme_linedraw()+
scale_colour_brewer( type = "qual", palette = "Dark2", direction = 1)+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank())+
labs(x="Model Estimated Days to 50% Germination")
xlim(-20,120)+ylim(-5,20)+geom_point(aes(color=Taxa),size=4)+
geom_vline(aes(xintercept=Estimate, color= Taxa))+
facet_grid(as.factor(force)~as.factor(chillweeks))+theme_linedraw()+
scale_colour_brewer( type = "qual", palette = "Dark2", direction = 1)+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank())+
labs(x="Model Estimated Days to 50% Germination")
ggplot(daty.wei,aes(x=Estimate,y=0, color=Taxa,label=Taxa))+
xlim(-20,120)+ylim(-5,20)+geom_point(aes(color=Taxa),size=4)+
geom_vline(aes(xintercept=Estimate, color= Taxa))+
facet_grid(as.factor(force)~as.factor(chillweeks))+theme_linedraw()+
scale_colour_brewer( type = "qual", palette = "Dark2", direction = 1)+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank())+
labs(x="Model Estimated Days to 50% Germination")
ggplot(daty.wei,aes(x=Estimate,y=0))+
xlim(-20,120)+ylim(-5,20)+geom_point(size=4)+
geom_vline(aes(xintercept=Estimate))+
facet_grid(as.factor(force)~as.factor(chillweeks))+theme_linedraw()+
scale_colour_brewer( type = "qual", palette = "Dark2", direction = 1)+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank())+
labs(x="Model Estimated Days to 50% Germination")
new.dev()
ggplot(daty.wei,aes(x=Estimate,y=0))+
xlim(-20,120)+ylim(-5,20)+geom_point(size=4)+
geom_vline(aes(xintercept=Estimate))+
facet_grid(as.factor(force)~as.factor(chillweeks))+theme_linedraw()+
scale_colour_brewer( type = "qual", palette = "Dark2", direction = 1)+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank())+
labs(x="Model Estimated Days to 50% Germination")
dev.new()
ggplot(daty.wei,aes(x=Estimate,y=0))+
xlim(-20,120)+ylim(-5,20)+geom_point(size=4)+
geom_vline(aes(xintercept=Estimate))+
facet_grid(as.factor(force)~as.factor(chillweeks))+theme_linedraw()+
scale_colour_brewer( type = "qual", palette = "Dark2", direction = 1)+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank())+
labs(x="Model Estimated Days to 50% Germination")
ggplot(daty.wei,aes(x=Estimate,y=0))+
xlim(-0,120)+ylim(-5,20)+geom_point(size=4)+
geom_vline(aes(xintercept=Estimate))+
facet_grid(as.factor(force)~as.factor(chillweeks))+theme_linedraw()+
scale_colour_brewer( type = "qual", palette = "Dark2", direction = 1)+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank())+
labs(x="Model Estimated Days to 50% Germination")
###predict and plot
pred.weeks<-c(0,9)
pred.weeks<-c(0,9)
pred.force<-c(0,5)
new.data <- data.frame(chillweeks = c(rep(pred.weeks,2)),
force = c(rep(pred.force,each=2)))
daty.wei<-predict(fit.wei.crypto,probs =c(0.25,.75),newdata=new.data)### something is wrong with error
daty.wei<-cbind(daty.wei,new.data)
dev.new()
ggplot(daty.wei,aes(x=Estimate,y=0))+
xlim(-0,120)+ylim(-5,20)+geom_point(size=4)+
geom_vline(aes(xintercept=Estimate))+
facet_grid(as.factor(force)~as.factor(chillweeks))+theme_linedraw()+
scale_colour_brewer( type = "qual", palette = "Dark2", direction = 1)+
theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank())+
labs(x="Model Estimated Days to 50% Germination")
dev.off()
View(new.data)
View(daty.wei)
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
loadmodels <- FALSE
runpart1 <- FALSE
if(length(grep("Lizzie", getwd())>0)) {
setwd("~/Documents/git/projects/misc/dan/timetogerminate/germination_trials")
} else setwd("~/Documents/git/timetogerminate/germination_trials")
#mod1<-readRDS("modchill.mega.rds")
library(rstan)
#library(tidyr)
#library(drc)
#library(dplyr)
#library(shinystan)
library(extraDistr)
### 9/12/19 new plan: for real data. run a chilling model on subset of data at each forcing level, so we just need to simulate data for chilling
time <-seq(0,24,by=1) #time of each trial
chilltreat <- c(0,1,2,3,4,5,6,7,8,9,10) ### it work
sigma_y <- 0.01 ## small signma
t50.a <- 20 #intercept of t50
t50.cb <- -1.5 # slope of t50 with chilling
beta.a <- 7 #intercept of beta (shape paramenter)
beta.cb<-.3 #slope of beta chilling
d.a <- 0.2 # intercept of d (maximum germination %)
d.cb<-0.07 # slope of d chilling
repz<-seq(1,3,by=1)
df2<-data.frame(time=numeric(), y=numeric(),chilltreat=numeric(),ID=numeric())  ##generate fake data
for (i in c(1:length(chilltreat))){
y <- c()
for(k in c(1:length(repz))){
y<-(d.cb*chilltreat[i]+d.a)/(1+((time/(t50.cb*chilltreat[i]+t50.a))^-(beta.cb*chilltreat[i]+beta.a)))
#y<-(d.b*treat[i]+d.a)/(1+((time/(t50.b*treat[i]+t50.a))^-(beta.a)))
dfhere2 <- data.frame(time=time, y=rtnorm(length(y),y,sigma_y,a=0,b=Inf),chilltreat=rep(chilltreat[i], length(y)),ID=rep(repz[k],length(y)))
df2 <- rbind(df2, dfhere2) ## rbind it here for safty
}
}
ploty2<-ggplot(df2,aes(time,y))+geom_point(aes(color=as.factor(chilltreat))) #plot fake data
ploty2+geom_line(stat = "summary", fun.y = mean, aes(color=as.factor(chilltreat))) # plot fake data with average lines
df.adj2<-df2
df.adj2$time<-ifelse(df.adj2$time==0,0.0001,df.adj2$time) ### change time=0 to .0001 because models struggle to fit zero values
data.list2<-with(df.adj2,
list(Y=y,
t=time,
chill=chilltreat,
N=nrow(df.adj2) # datalist
))
modchill.mega = stan('stan/fakeseedgoodchill_alt.stan', data = data.list2,
iter = 10000, warmup=9000, chain=4,init=0)
modchill.mega
sumtab<-xtable(summary(modchill.mega)$summary[c("a_d","b_d","a_beta","b_beta","a_t50","b_t50","sigma"),])
library(xtable)
sumtab<-xtable(summary(modchill.mega)$summary[c("a_d","b_d","a_beta","b_beta","a_t50","b_t50","sigma"),])
sumtab
