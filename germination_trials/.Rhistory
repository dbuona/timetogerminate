mich.data$dev_time_cent<-(mich.data$dev.time-mean(mich.data$dev.time))/(2*sd(mich.data$dev.time))
mich.data$tol_cent<-(mich.data$shade_bin-mean(mich.data$shade_bin))/(2*sd(mich.data$shade_bin))
mich.data$precip_cent<-(mich.data$min._precip-mean(mich.data$min._precip))/(2*sd(mich.data$min._precip))
View(mich.data)
#mich.data$dev_time_cent<-(mich.data$dev.time-mean(mich.data$dev.time))/(2*sd(mich.data$dev.time))
#mich.data$tol_cent<-(mich.data$shade_bin-mean(mich.data$shade_bin))/(2*sd(mich.data$shade_bin))
mich.data$precip_cent<-(mich.data$min._precip-mean(mich.data$min._precip))/(2*sd(mich.data$min._precip))
michVCV <- vcv.phylo(mich.tree.droughtprune, cor=TRUE) #this could extract my vVC. from the file
View(michVCV)
Lmat <- matrix(rep(1), nrow = nrow(michVCV), ncol = ncol(michVCV))
diag(Lmat) <- 0
## build up data for stan model
N <- nrow(mich.data)
X <- as.vector(mich.data$pol_cent)
K <- 1
V <- michVCV
y <- as.vector(mich.data$pro2)
rstan:::rstudio_stanc("~/Documents/git/proterant/stan/pgls_hysteranthy.stan")
rstan:::rstudio_stanc("~/Documents/git/proterant/stan/pgls_hysteranthy.stan")
rstan:::rstudio_stanc("~/Documents/git/proterant/stan/pgls_hysteranthy.stan")
rstan:::rstudio_stanc("~/Documents/git/proterant/stan/pgls_hysteranthy.stan")
rstan:::rstudio_stanc("~/Documents/git/proterant/stan/pgls_hysteranthy.stan")
rstan:::rstudio_stanc("~/Documents/git/proterant/stan/pgls_hysteranthy.stan")
rstan:::rstudio_stanc("~/Documents/git/proterant/stan/pgls_hysteranthy.stan")
rstan:::rstudio_stanc("~/Documents/git/proterant/stan/pgls_hysteranthy.stan")
fit.pgls <- stan("..//stan/pgls_hysteranthy.stan", data=c("N","X", "K", "Lmat", "V", "y"), iter=2000, chains=4)
## build up data for stan model
N <- nrow(mich.data)
flo_time <- as.vector(mich.data$flo_cent)
K <- 1
V <- michVCV
y <- as.vector(mich.data$pro2)
fit.pgls <- stan("..//stan/pgls_hysteranthy.stan", data=c("N","flo_time", "K", "Lmat", "V", "y"), iter=2000, chains=4)
flo_time <- as.vector(mich.data$flo_time)
fit.pgls <- stan("..//stan/pgls_hysteranthy.stan", data=c("N","flo_time", "K", "Lmat", "V", "y"), iter=2000, chains=4)
flo_time
y
######prune the tree for drought modeling
mich.data<-filter(mich.data,!is.na(min._precip))
# Working on Bayes PGLS, following along here #
# https://github.com/Auerilas/BayesPGLS/blob/master/PGLS.py #
# Same as Will Pearse's code I think ... ##
## Updated on 17 May 2016 (Happy Birthday! and Happy J Tenure day!) ##
## By Lizzie ##
## This file now adapts the python file and seems to run ##
## I made a copy of this file (with minor directory adjustments) in .. ##
# teaching/gelmanhill/BayesPGLS ##
#### Dan B began modifying this on Feb 11 2019
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant/input")
library(phytools)
library(rstan)
library("shinystan")
library(ape)
library(tidyverse)
mich.data<-read.csv("datasheets_derived/MTSV_USFS/mich_data_full_clean.csv")
mich.tree<-read.tree("datasheets_derived/MTSV_USFS/pruned_for_mich.tre")
trait.data<-read.csv("USDA_traitfor_MTSV.csv",header=TRUE)
###clean data
mich.data$pol<-ifelse(mich.data$Species=="quadrangulata",1,mich.data$pol)
mich.data$pol<-ifelse(mich.data$Genus=="Populus"& mich.data$Species=="nigra",1,mich.data$pol)
###make the tree work
mich.tree$node.label<-NULL
mich.data<-left_join(mich.data,trait.data,by="name")
######prune the tree for drought modeling
mich.data<-filter(mich.data,!is.na(min._precip))
####prune tree to match reduced dataset
names.intree<-mich.tree$tip.label
namelist<-unique(mich.data$name)
to.prune<-which(!names.intree%in%namelist)
mich.tree.droughtprune<-drop.tip(mich.tree,to.prune)
mytree.names<-mich.tree.droughtprune$tip.label
####recenter here after you prune the list
###Rescale predictors this makes it so you can compare binary to continous data
#mich.data$height_cent<-(mich.data$heigh_height-mean(mich.data$heigh_height))/(2*sd(mich.data$heigh_height))
#mich.data$fruit_cent<-(mich.data$fruiting-mean(mich.data$fruiting))/(2*sd(mich.data$fruiting))
mich.data$flo_cent<-(mich.data$flo_time-mean(mich.data$flo_time))/(2*sd(mich.data$flo_time))
mich.data$pol_cent<-(mich.data$pol-mean(mich.data$pol))/(2*sd(mich.data$pol))
mich.data$av_fruit_time_cent<-(mich.data$av_fruit_time-mean(mich.data$av_fruit_time))/(2*sd(mich.data$av_fruit_time))
#mich.data$dev_time_cent<-(mich.data$dev.time-mean(mich.data$dev.time))/(2*sd(mich.data$dev.time))
#mich.data$tol_cent<-(mich.data$shade_bin-mean(mich.data$shade_bin))/(2*sd(mich.data$shade_bin))
mich.data$precip_cent<-(mich.data$min._precip-mean(mich.data$min._precip))/(2*sd(mich.data$min._precip))
michVCV <- vcv.phylo(mich.tree.droughtprune, cor=TRUE) #this could extract my vVC. from the file
Lmat <- matrix(rep(1), nrow = nrow(michVCV), ncol = ncol(michVCV))
diag(Lmat) <- 0
## build up data for stan model
N <- nrow(mich.data)
N
flo_time <- as.vector(mich.data$flo_time)
flo_time
K <- 1
V <- michVCV
y <- as.vector(mich.data$pro2)
y
nrow(y)
fit.pgls <- stan("..//stan/pgls_hysteranthy.stan", data=c("N","flo_time", "K", "Lmat", "V", "y"), iter=2000, chains=4)
rstan:::rstudio_stanc("~/Documents/git/proterant/stan/pgls_hysteranthy.stan")
rstan:::rstudio_stanc("~/Documents/git/proterant/stan/pgls_hysteranthy.stan")
rstan:::rstudio_stanc("~/Documents/git/proterant/stan/pgls_hysteranthy.stan")
##### add incubation
dat$INC<-20
###fake data for germination mdodels
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
library(drc)
library(tidyverse)
library(MCMCglmm)
library(shinystan)
library(rstan)
library(rstanarm)
library(bayesplot)
options(mc.cores = parallel::detectCores())
setwd("~/Documents/git/timetogerminate/germination_trials")
##use lognoral to simulate the data
set.seed(613613)
###This make data folowing the log logistic function
germ<-function(t,d,b,t50){
y<- d/(1+((t/t50)^b))
return(data.frame(time=t, y=y))
}
##3 petridishes of the same treatment, there is probably a loop or apply function for this
A<-germ(seq(0,24,by=3),rtnorm(1,12,1,lower=8,upper=20),rnorm(1,-5,0.5),rnorm(1,15,2)) ###t, d,beta,t50
A$dish<-"A"
B<-germ(seq(0,24,by=3),rtnorm(1,12,1,lower=8,upper=20),rnorm(1,-5,0.5),rnorm(1,15,2))
B$dish<-"B"
C<-germ(seq(0,24,by=3),rtnorm(1,12,1,lower=8,upper=20),rnorm(1,-5,0.5),rnorm(1,15,2))
C$dish<-"C"
#make your data
d<-rbind(A,B,C)
d$y<-round(d$y)
mod<-drm(y~time,fct=LL.3(),data=d,type="continuous")
summary(mod)
plot(mod,ylim=c(0,20),xlim=c(0,24),log="",pch=16,type="all")
G<-germ(seq(0,24,by=3),rtnorm(1,18,1,lower=8,upper=20),rnorm(1,-6,0.5),rnorm(1,10,1))
G$dish<-"G"
H<-germ(seq(0,24,by=3),rtnorm(1,18,1,lower=8,upper=20),rnorm(1,-6,0.5),rnorm(1,10,1))
H$dish<-"H"
I<-germ(seq(0,24,by=3),rtnorm(1,18,1,lower=8,upper=20),rnorm(1,-6,0.5),rnorm(1,10,1))
I$dish<-"I"
dd<-rbind(G,H,I)
dd$chill<-14
dd$y<-round(dd$y)
d$chill<-7
dat<-rbind(d,dd)
mod2<-drm(y~time,factor(chill),fct=LL.3(),data=dat,type="continuous")
summary(mod2)
plot(mod2,ylim=c(0,20),xlim=c(0,24),log="",pch=16,type="all")
##### add incubation
dat$INC<-20
View(dat)
A2<-germ(seq(0,24,by=3),rtnorm(1,13,1,lower=8,upper=20),rnorm(1,-5.5,0.5),rnorm(1,13,2)) ###t, d,beta,t50
A2$dish<-"A.1"
B2<-germ(seq(0,24,by=3),rtnorm(1,13,1,lower=8,upper=20),rnorm(1,-5.5,0.5),rnorm(1,13,2))
B2$dish<-"B.1"
C2<-germ(seq(0,24,by=3),rtnorm(1,13,1,lower=8,upper=20),rnorm(1,-5.5,0.5),rnorm(1,13,2))
C2$dish<-"C.1"
d.1<-rbind(A2,B2,C2)
d.1$y<-round(d.1$y)
View(d.1)
d.1$chill<-7
d.1$INC<-25
G2<-germ(seq(0,24,by=3),rtnorm(1,19,1,lower=8,upper=20),rnorm(1,-6.5,0.5),rnorm(1,8,1))
G2$dish<-"G.`"
H2<-germ(seq(0,24,by=3),rtnorm(1,19,1,lower=8,upper=20),rnorm(1,-6.5,0.5),rnorm(1,8,1))
H2$dish<-"H.1"
I2<-germ(seq(0,24,by=3),rtnorm(1,19,1,lower=8,upper=20),rnorm(1,-6.5,0.5),rnorm(1,8,1))
I2$dish<-"I.1"
dd.1<-rbind(G2,H2,I2)
dd.1$chill<-14
dd.1$INC<-25
dd.1$y<-round(dd.1$y)
dat.1<-rbind(d.1,dd.1)
full.dat<-rbind(dat,dat.1)
View(full.dat)
G2<-germ(seq(0,24,by=3),rtnorm(1,19,1,lower=8,upper=20),rnorm(1,-6.5,0.5),rnorm(1,8,1))
G2$dish<-"G.1"
H2<-germ(seq(0,24,by=3),rtnorm(1,19,1,lower=8,upper=20),rnorm(1,-6.5,0.5),rnorm(1,8,1))
H2$dish<-"H.1"
I2<-germ(seq(0,24,by=3),rtnorm(1,19,1,lower=8,upper=20),rnorm(1,-6.5,0.5),rnorm(1,8,1))
I2$dish<-"I.1"
dd.1<-rbind(G2,H2,I2)
dd.1$chill<-14
dd.1$INC<-25
dd.1$y<-round(dd.1$y)
dat.1<-rbind(d.1,dd.1)
full.dat<-rbind(dat,dat.1)
rstan:::rstudio_stanc("stan/fakeseed_wchillandinc.stan")
data.list3 <- with(full.dat,
list(Y=y,
t = time,
chill=chill,
inc=INC,
N = nrow(dat)
)
)
germ.mod3 = stan('stan/fakeseed_wchillandinc.stan', data = data.list3,
iter = 3000, warmup=2000)
data.list3 <- with(full.dat,
list(Y=y,
t = time,
chill=chill,
inc=INC,
N = nrow(full.dat)
)
)
germ.mod3 = stan('stan/fakeseed_wchillandinc.stan', data = data.list3,
iter = 3000, warmup=2000)
mod.sum3<-summary(germ.mod3)$summary
mod.sum3[c( "sigma",
"b_chill_beta","b_chill_t50","b_chill_d","b_inc_beta","b_inc_t50","b_inc_d","a_beta","a_t50","a_d"),]
mod.sum3[c( "b_chill_beta","b_chill_t50","b_chill_d","b_inc_beta","b_inc_t50","b_inc_d","a_beta","a_t50","a_d","sigma",),]
mod.sum3[c( "b_chill_beta","b_chill_t50","b_chill_d","b_inc_beta","b_inc_t50","b_inc_d","a_beta","a_t50","a_d","sigma"),]
mod.sum3[c("a_beta","a_t50","a_d", "b_chill_beta","b_chill_t50","b_chill_d","b_inc_beta","b_inc_t50","b_inc_d","sigma"),]
mod3<-drm(y~time,factor(chill):factor(INC),fct=LL.3(),data=full.dat,type="continuous")
summary(mod3)
plot(mod3,ylim=c(0,20),xlim=c(0,24),log="",pch=16,type="all")
mod.sum3[c("a_beta","a_t50","a_d", "b_chill_beta","b_chill_t50","b_chill_d","b_inc_beta","b_inc_t50","b_inc_d","sigma"),]
cL<-7
cH<-14
iL<-20
iH<-25
### beta
a_d+cL* 0.3670658+iL*0.1044341
### beta
9.0780587+cL* 0.3670658+iL*0.1044341
9.0780587+cL* 0.3670658+iH*0.1044341
9.0780587+* 0.3670658+iL*0.1044341
9.0780587+cH* 0.3670658+iL*0.1044341
9.0780587+cH* 0.3670658+iH*0.1044341
9.0780587+cH* 0.3670658+iL*0.1044341
9.0780587+cH* 0.3670658+iH*0.1044341
rstan:::rstudio_stanc("stan/fakeseed_winters.stan")
rstan:::rstudio_stanc("stan/fakeseed_winters.stan")
germ.mod4 = stan('stan/fakeseed_winters.stan', data = data.list3,
iter = 3000, warmup=2000)
sumamry(germ.mod4)
summary(germ.mod4)
rstan:::rstudio_stanc("stan/fakeseed_winters.stan")
data.list3 <- with(full.dat,
list(Y=y,
t = time,
chill=chill,
inc=INC,
N = nrow(full.dat)
)
)
germ.mod4 = stan('stan/fakeseed_winters.stan', data = data.list3,
iter = 3000, warmup=2000)
rstan:::rstudio_stanc("stan/fakeseed_winters.stan")
rstan:::rstudio_stanc("stan/fakeseed_winters.stan")
data.list3 <- with(full.dat,
list(Y=y,
t = time,
chill=chill,
inc=INC,
N = nrow(full.dat)
)
)
germ.mod4 = stan('stan/fakeseed_winters.stan', data = data.list3,
iter = 3000, warmup=2000)
summary(germ.mod4)
rstan:::rstudio_stanc("stan/fakeseed_winters.stan")
rstan:::rstudio_stanc("stan/fakeseed_winters.stan")
rstan:::rstudio_stanc("stan/fakeseed_winters.stan")
rstan:::rstudio_stanc("stan/fakeseed_winters.stan")
rstan:::rstudio_stanc("stan/fakeseed_winters.stan")
rstan:::rstudio_stanc("stan/fakeseed_winters.stan")
rstan:::rstudio_stanc("stan/fakeseed_winters.stan")
germ.mod4 = stan('stan/fakeseed_winters.stan', data = data.list3,
iter = 3000, warmup=2000)
germ.mod4 = stan('stan/fakeseed_winters.stan', data = data.list3,
iter = 4000, warmup=3000)
rstan:::rstudio_stanc("stan/fakeseed_winters.stan")
data.list3 <- with(full.dat,
list(Y=y,
t = time,
chill=chill,
inc=INC,
N = nrow(full.dat)
)
)
germ.mod4 = stan('stan/fakeseed_winters.stan', data = data.list3,
iter = 4000, warmup=3000)
rstan:::rstudio_stanc("stan/fakeseed_winters.stan")
germ.mod4 = stan('stan/fakeseed_winters.stan', data = data.list3,
iter = 3000, warmup=2000)
summary(germ.mod4)
setwd("~/Documents/git/timetogerminate/germination_trials")
real.data<-read.csv("input/cumulative_data.csv")
View(real.data)
real.data<-read.csv("input/daily_dat_nointerval.csv")
View(real.data)
real.data$cum.ger,<- real.data %>% groupby(plate_num)%>%cumsum(germ.daily)
real.data$cum.germ<- real.data %>% groupby(plate_num)%>%cumsum(germ.daily)
real.data$cum.germ<- real.data %>% group_by(plate_num)%>%cumsum(germ.daily)
real.data$cum.germ<- real.data %>% group_by(plate_num)%>%cum_sum(germ.daily)
real.data<- real.data %>% group_by(plate_num)%>%mutatue((germ.cum.germ=cumsum(germ.daily))
real.data<- real.data %>% group_by(plate_num)%>%mutatue((germ.cum.germ=cumsum(germ.daily))
))
real.data<- real.data %>% group_by(plate_num)%>% mutate(germ.cum.germ=cumsum(germ.daily))
View(real.data)
View(real.data)
Ascplepias<-filter(real.data,Taxa=="Asclepias syriaca")
Asclepias<-filter(real.data,Taxa=="Asclepias syriaca")
View(Asclepias)
goober<-real.data
goober$chill_time<-NA
goober<- within(goober, chill_time[COLD=="0" ]<-0)
goober<- within(goober, chill_time[COLD=="A" ]<-14)
goober<- within(goober, chill_time[COLD=="B" ]<-28)
goober<- within(goober, chill_time[COLD=="C" ]<-35)
goober<- within(goober, chill_time[COLD=="D" ]<-42)
goober<- within(goober, chill_time[COLD=="E" ]<-49)
goober<- within(goober, chill_time[COLD=="f" ]<-56)
goober<- within(goober, chill_time[COLD=="G" ]<-63)
goober<- within(goober, chill_time[COLD=="H" ]<-77)
goober<- within(goober, chill_time[COLD=="i" ]<-91)
goober$warmT<-NA
goober<- within(goober, warmT[INC=="H" ]<-25)
goober<- within(goober, warmT[INC=="L" ]<-20)
real.data<-goober
Asclepias<-filter(real.data,Taxa=="Asclepias syriaca")
data.list.as <- with(Asclepias,
t = DAY,
inc=warmT,
)
data.list.as <- with(Asclepias,
list(Y=cum.germ,
t = DAY,
chill=chill_time,
inc=warmT,
N = nrow(Asclepias)))
real.data<-read.csv("input/daily_dat_nointerval.csv")
real.data<- real.data %>% group_by(plate_num)%>% mutate(germ.cum=cumsum(germ.daily))
goober<-real.data
goober$chill_time<-NA
goober<- within(goober, chill_time[COLD=="0" ]<-0)
goober<- within(goober, chill_time[COLD=="A" ]<-14)
goober<- within(goober, chill_time[COLD=="B" ]<-28)
goober<- within(goober, chill_time[COLD=="C" ]<-35)
goober<- within(goober, chill_time[COLD=="D" ]<-42)
goober<- within(goober, chill_time[COLD=="E" ]<-49)
goober<- within(goober, chill_time[COLD=="f" ]<-56)
goober<- within(goober, chill_time[COLD=="G" ]<-63)
goober<- within(goober, chill_time[COLD=="H" ]<-77)
goober<- within(goober, chill_time[COLD=="i" ]<-91)
goober$warmT<-NA
goober<- within(goober, warmT[INC=="H" ]<-25)
goober<- within(goober, warmT[INC=="L" ]<-20)
real.data<-goober
data.list.as <- with(Asclepias,
list(Y=germ.cum,
t = DAY,
chill=chill_time,
inc=warmT,
N = nrow(Asclepias)))
real.data<-read.csv("input/daily_dat_nointerval.csv")
real.data<- real.data %>% group_by(plate_num)%>% mutate(germ.cum=cumsum(germ.daily))
View(real.data)
goober<-real.data
goober$chill_time<-NA
goober<- within(goober, chill_time[COLD=="0" ]<-0)
goober<- within(goober, chill_time[COLD=="A" ]<-14)
goober<- within(goober, chill_time[COLD=="B" ]<-28)
goober<- within(goober, chill_time[COLD=="C" ]<-35)
goober<- within(goober, chill_time[COLD=="D" ]<-42)
goober<- within(goober, chill_time[COLD=="E" ]<-49)
goober<- within(goober, chill_time[COLD=="f" ]<-56)
goober<- within(goober, chill_time[COLD=="G" ]<-63)
goober<- within(goober, chill_time[COLD=="H" ]<-77)
goober<- within(goober, chill_time[COLD=="i" ]<-91)
goober$warmT<-NA
goober<- within(goober, warmT[INC=="H" ]<-25)
goober<- within(goober, warmT[INC=="L" ]<-20)
real.data<-goober
Asclepias<-filter(real.data,Taxa=="Asclepias syriaca")
data.list.as <- with(Asclepias,
list(Y=germ.cum,
t = DAY,
chill=chill_time,
inc=warmT,
N = nrow(Asclepias)))
germ.asc.int = stan('stan/fakeseed_winters.stan', data = data.list.as,
iter = 3000, warmup=2000)
data.list.as <- with(Asclepias,
list(Y=germ.cum,
t = DAY,
chill=chill_time,
inc=warmT,
N = nrow(Asclepias)))
germ.asc.int = stan('stan/fakeseed_wchillandinc.stan', data = data.list.as,
iter = 3000, warmup=2000)
mod.sum.as<-summary(germ.as.int)$summary
mod.sum.as<-summary(germ.asc.int)$summary
mod.sum.as[c("a_beta","a_t50","a_d", "b_chill_beta","b_chill_t50","b_chill_d","b_inc_beta","b_inc_t50","b_inc_d","sigma"),]
Crypto<-filter(real.data,Taxa=="Cryptotaenia canadensis")
data.list.as <- with(Crypto,
list(Y=germ.cum,
t = DAY,
chill=chill_time,
inc=warmT,
N = nrow(Crypto)))
germ.asc.int = stan('stan/fakeseed_wchillandinc.stan', data = data.list.as,
iter = 3000, warmup=2000)
launch_shinystan(germ.asc.int)
data.list3 <- with(full.dat,
list(Y=y,
t = time,
chill=chill,
inc=INC,
N = nrow(full.dat)
)
)
germ.mod3 = stan('stan/fakeseed_wchillandinc.stan', data = data.list3,
iter = 3000, warmup=2000)
launch_shinystan(germ.mod3)
launch_shinystan(germ.mod2)
germ.mod2 = stan('stan/fakeseed_wchill.stan', data = data.list2,
iter = 3000, warmup=2000) #this model is fishy
data.list2 <- with(dat,
list(Y=y,
t = time,
chill=chill,
N = nrow(dat)
)
)
germ.mod2 = stan('stan/fakeseed_wchill.stan', data = data.list2,
iter = 3000, warmup=2000) #this model is fishy
launch_shinystan(germ.mod2)
rstan:::rstudio_stanc("stan/fakeseed_wchill.stan")
rstan:::rstudio_stanc("stan/fakeseed_wchill.stan")
data.list3 <- with(full.dat,
list(Y=y,
t = time,
chill=chill,
inc=INC,
N = nrow(full.dat)
)
)
germ.mod3 = stan('stan/fakeseed_wchillandinc.stan', data = data.list3,
iter = 3000, warmup=2000)
data.list3 <- with(full.dat,
list(Y=y,
t = time,
chill=chill,
inc=INC,
N = nrow(full.dat)
)
)
data.list2 <- with(dat,
list(Y=y,
t = time,
chill=chill,
N = nrow(dat)
)
)
germ.mod2 = stan('stan/fakeseed_wchill.stan', data = data.list2,
iter = 3000, warmup=2000) #this model is fishy
rstan:::rstudio_stanc("stan/fakeseed_wchill.stan")
rstan:::rstudio_stanc("stan/fakeseed_wchill.stan")
data.list2 <- with(dat,
list(Y=y,
t = time,
chill=chill,
N = nrow(dat)
)
)
germ.mod2 = stan('stan/fakeseed_wchill.stan', data = data.list2,
iter = 3000, warmup=2000) #this model is fishy
launch_shinystan(germ.mod2)
mod.sum2<-summary(germ.mod2)$summary
mod.sum2[c( "sigma",
"b_chill_beta","b_chill_t50","b_chill_d","a_beta","a_t50","a_d"),]
##the model give back the right paramenters, but I don't totally trust it.
ys<-data.list2$Y
y_pred <- extract(germ.mod2, 'y_hat')
par(mfrow=c(1,2))
hist(ys, breaks=50, xlab="real germination", main="")
hist(y_pred[[1]][1,], breaks=50, xlab="PPC germination", main="")
y_pred <- extract(germ.mod2, 'y_hat')
mod.sum2[c( "sigma",
"b_chill_beta","sigma_b_beta","b_chill_t50","sigma_b_t50","b_chill_d","sigma_b_d","a_beta","a_t50","a_d"),]
rstan:::rstudio_stanc("stan/fakeseed_wchillandinc.stan")
data.list3 <- with(full.dat,
list(Y=y,
t = time,
chill=chill,
inc=INC,
N = nrow(full.dat)
)
)
germ.mod3 = stan('stan/fakeseed_wchillandinc.stan', data = data.list3,
iter = 3000, warmup=2000)
launch_shinystan(germ.mod3)
rstan:::rstudio_stanc("stan/fakeseed_wchill.stan")
germ.mod3 = stan('stan/fakeseed_wchillandinc.stan', data = data.list3,
iter = 3000, warmup=2000)
rstan:::rstudio_stanc("stan/fakeseed_wchillandinc.stan")
data.list3 <- with(full.dat,
list(Y=y,
t = time,
chill=chill,
inc=INC,
N = nrow(full.dat)
)
)
germ.mod3 = stan('stan/fakeseed_wchillandinc.stan', data = data.list3,
iter = 3000, warmup=2000)
launch_shinystan(germ.mod3)
